
=== ./README.md ===
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.js`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.

=== ./src/app/about/page.js ===
import AboutHero from '../components/about/AboutHero';
import KadirStory from '../components/about/KadirStory';
import OurIngredients from '../components/about/OurIngredients';
import OurTeam from '../components/about/OurTeam';
import Timeline from '../components/about/Timeline';

export const metadata = {
  title: 'Hikayemiz | Kebapçı Kadir',
  description: 'Kebapçı Kadir\'in hikayesi, değerleri ve felsefesi. Kadir Usta\'nın kebap tutkusu ve lezzet serüveni.',
}

export default function About() {
  return (
    <>
      <AboutHero />
      <KadirStory />
      <OurIngredients />
      <Timeline />
      <OurTeam />
    </>
  );
}
=== ./src/app/components/about/AboutHero.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { theme } from '../../styles/theme';

const HeroSection = styled.section`
  height: 60vh;
  background-image: url('/images/about-hero.jpg');
  background-size: cover;
  background-position: center;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  
  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
  }
`;

const HeroContent = styled.div`
  text-align: center;
  z-index: 1;
  color: ${theme.colors.text.light};
  max-width: 800px;
  padding: 0 1rem;
`;

const PageTitle = styled(motion.h1)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['4xl']};
  margin-bottom: 1.5rem;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize['5xl']};
  }
`;

const PageDescription = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize.xl};
  }
`;

const AboutHero = () => {
  return (
    <HeroSection>
      <HeroContent>
        <PageTitle
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
        >
          Kadir Ustanın Hikayesi
        </PageTitle>
        <PageDescription
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.2 }}
        >
          Yarım asrı aşkın kebapçılık geleneği, dededen toruna aktarılan tarifler ve yılların getirdiği ustalık...
        </PageDescription>
      </HeroContent>
    </HeroSection>
  );
};

export default AboutHero;
=== ./src/app/components/about/KadirStory.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import Image from 'next/image';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background-color: ${theme.colors.background.main};
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const ContentGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 3rem;
  align-items: center;
  
  ${theme.media.lg} {
    grid-template-columns: 1fr 1fr;
  }
`;

const ImageContainer = styled(motion.div)`
  position: relative;
  height: 400px;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  
  ${theme.media.md} {
    height: 500px;
  }
  
  ${theme.media.lg} {
    height: 600px;
  }
`;

const ContentContainer = styled.div``;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1.5rem;
  position: relative;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 60px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
`;

const Paragraph = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.dark};
  line-height: 1.8;
  margin-bottom: 1.5rem;
`;

const Signature = styled(motion.div)`
  font-family: ${theme.typography.fontFamily.accent};
  font-size: ${theme.typography.fontSize['2xl']};
  color: ${theme.colors.primary.red};
  margin-top: 2rem;
`;

const KadirStory = () => {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  return (
    <SectionContainer ref={ref}>
      <ContentGrid>
        <ImageContainer
          initial={{ opacity: 0, x: -50 }}
          animate={inView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}
          transition={{ duration: 0.8 }}
        >
          <Image
            src="/images/kadir-usta.jpg"
            alt="Kadir Usta"
            fill
            style={{objectFit: "cover"}}
          />
        </ImageContainer>
        
        <ContentContainer>
          <SectionTitle
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6 }}
          >
            Adanadan Mersine Uzanan Bir Lezzet Serüveni
          </SectionTitle>
          
          <Paragraph
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.2 }}
          >
            1965 yılında, henüz 15 yaşındayken Adananın en meşhur kebapçılarından birinde çırak olarak başladığım bu yolculuk, benim için sadece bir meslek değil, bir tutku haline geldi. Ustamın "Sırrımız taze malzeme ve sabırda" dediği günleri hiç unutmadım.
          </Paragraph>
          
          <Paragraph
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.3 }}
          >
            1980 yılında Mersine yerleştikten sonra, kendime has tariflerimi geliştirmeye başladım. Yöresel baharatları, mevsiminde toplanan taze otları ve en kaliteli etleri kullanarak, geleneksel tadı korurken kendime özgü dokunuşlar katmayı başardım.
          </Paragraph>
          
          <Paragraph
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.4 }}
          >
            1985te küçük bir dükkânda açtığım ilk restoranım, bugün Mersinin en çok tercih edilen kebap duraklarından biri haline geldi. Bu başarının arkasında, hiç taviz vermediğim kalite anlayışı ve misafirlerimize gösterdiğimiz samimi ilgi var.
          </Paragraph>
          
          <Paragraph
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.5 }}
          >
            Bugün, oğlum ve kızımla birlikte bu geleneği sürdürüyor, her gün aynı heyecanla mutfağa giriyorum. Amacımız sadece karın doyurmak değil, unutulmaz bir lezzet deneyimi yaşatmak. Sizi de bu lezzet yolculuğuna davet ediyorum.
          </Paragraph>
          
          <Signature
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.6 }}
          >
            Kadir Yılmaz
          </Signature>
        </ContentContainer>
      </ContentGrid>
    </SectionContainer>
  );
};

export default KadirStory;
=== ./src/app/components/about/OurIngredients.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import Image from 'next/image';
import { FiCheckCircle } from 'react-icons/fi';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background-color: ${theme.colors.background.alt};
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const SectionHeader = styled.div`
  text-align: center;
  margin-bottom: 4rem;
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
  position: relative;
  display: inline-block;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
`;

const SectionDescription = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.muted};
  max-width: 700px;
  margin: 2rem auto 0;
  line-height: 1.6;
`;

const IngredientsGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 3rem;
  
  ${theme.media.md} {
    grid-template-columns: repeat(2, 1fr);
  }
  
  ${theme.media.lg} {
    grid-template-columns: repeat(3, 1fr);
  }
`;

const IngredientCard = styled(motion.div)`
  background-color: ${theme.colors.background.main};
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
`;

const IngredientImageContainer = styled.div`
  position: relative;
  width: 100%;
  height: 200px;
`;

const IngredientContent = styled.div`
  padding: 1.5rem;
`;

const IngredientTitle = styled.h3`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize.xl};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
`;

const IngredientDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.muted};
  line-height: 1.6;
  margin-bottom: 1.5rem;
`;

const IngredientFeatures = styled.ul`
  list-style: none;
  padding: 0;
  margin: 0;
`;

const IngredientFeature = styled.li`
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  margin-bottom: 0.5rem;
  color: ${theme.colors.text.dark};
  
  svg {
    color: ${theme.colors.primary.green};
    flex-shrink: 0;
  }
`;

// Örnek malzeme verileri
const ingredients = [
  {
    id: 1,
    title: "Etlerimiz",
    description: "En kaliteli kuzular ve büyükbaş hayvanlardan elde edilen taze etler, özenle seçiliyor ve işleniyor.",
    image: "/images/meat.jpg",
    features: [
      "Toros Yaylalarından serbest dolaşan kuzular",
      "Günlük olarak temin edilen taze etler",
      "Kendi mutfağımızda hazırlanan kıymalar",
      "Hormonsuz, doğal beslenmiş hayvanlar"
    ]
  },
  {
    id: 2,
    title: "Baharatlarımız",
    description: "Yöresel tedarikçilerden alınan, taze ve doğal baharatlar, geleneksel tarifleri canlandırıyor.",
    image: "/images/spices.jpg",
    features: [
      "Urfa ve Antep'ten gelen özel biber karışımları",
      "Çekilmeden önce el ile ayıklanan baharatlar",
      "Taş değirmende öğütülen toz baharatlar",
      "Gizli tarif ile harmanlanan karışımlar"
    ]
  },
  {
    id: 3,
    title: "Sebzelerimiz",
    description: "Mevsiminde, yerel üreticilerden temin edilen taze sebzeler, her öğünde mükemmel lezzeti garantiliyor.",
    image: "/images/vegetables.jpg",
    features: [
      "Mersin ve çevresindeki çiftliklerden günlük tedarik",
      "Tamamen organik yetiştirilen domates ve biberler",
      "Özenle yıkanan ve hazırlanan malzemeler",
      "Mevsim dışında asla dondurulmuş ürün kullanmama"
    ]
  }
];

const OurIngredients = () => {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };
  
  const itemVariants = {
    hidden: { y: 30, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        type: "spring",
        stiffness: 100,
        damping: 15
      }
    }
  };
  
  return (
    <SectionContainer ref={ref}>
      <SectionHeader>
        <SectionTitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
        >
          Malzemelerimiz
        </SectionTitle>
        <SectionDescription
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          Kaliteli malzeme, lezzetli yemeğin temelidir. Bu nedenle en iyi malzemeleri, en güvenilir kaynaklardan tedarik ediyor, her detaya özen gösteriyoruz.
        </SectionDescription>
      </SectionHeader>
      
      <motion.div
        variants={containerVariants}
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
      >
        <IngredientsGrid>
          {ingredients.map((ingredient) => (
            <IngredientCard key={ingredient.id} variants={itemVariants}>
              <IngredientImageContainer>
                <Image
                  src={ingredient.image}
                  alt={ingredient.title}
                  fill
                  style={{objectFit: "cover"}}
                />
              </IngredientImageContainer>
              <IngredientContent>
                <IngredientTitle>{ingredient.title}</IngredientTitle>
                <IngredientDescription>{ingredient.description}</IngredientDescription>
                <IngredientFeatures>
                  {ingredient.features.map((feature, index) => (
                    <IngredientFeature key={index}>
                      <FiCheckCircle size={18} />
                      {feature}
                    </IngredientFeature>
                  ))}
                </IngredientFeatures>
              </IngredientContent>
            </IngredientCard>
          ))}
        </IngredientsGrid>
      </motion.div>
    </SectionContainer>
  );
};

export default OurIngredients;
=== ./src/app/components/about/OurTeam.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import Image from 'next/image';
import { FiInstagram, FiLinkedin } from 'react-icons/fi';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background-color: ${theme.colors.background.alt};
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const SectionHeader = styled.div`
  text-align: center;
  margin-bottom: 4rem;
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
  position: relative;
  display: inline-block;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
`;

const SectionDescription = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.muted};
  max-width: 700px;
  margin: 2rem auto 0;
  line-height: 1.6;
`;

const TeamGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  
  ${theme.media.sm} {
    grid-template-columns: repeat(2, 1fr);
  }
  
  ${theme.media.lg} {
    grid-template-columns: repeat(4, 1fr);
  }
`;

const TeamMemberCard = styled(motion.div)`
  background-color: ${theme.colors.background.main};
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
`;

const TeamMemberImageContainer = styled.div`
  position: relative;
  width: 100%;
  height: 300px;
`;

const TeamMemberContent = styled.div`
  padding: 1.5rem;
  text-align: center;
`;

const TeamMemberName = styled.h3`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize.xl};
  color: ${theme.colors.text.dark};
  margin-bottom: 0.5rem;
`;

const TeamMemberTitle = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.primary.red};
  margin-bottom: 1rem;
`;

const TeamMemberDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.muted};
  line-height: 1.6;
  margin-bottom: 1.5rem;
`;

const SocialLinks = styled.div`
  display: flex;
  justify-content: center;
  gap: 1rem;
`;

const SocialLink = styled.a`
  display: flex;
  align-items: center;
  justify-content: center;
  width: 35px;
  height: 35px;
  border-radius: 50%;
  background-color: ${theme.colors.secondary.beige};
  color: ${theme.colors.text.dark};
  transition: all 0.3s ease;
  
  &:hover {
    background-color: ${theme.colors.primary.red};
    color: ${theme.colors.text.light};
  }
`;

// Örnek ekip verileri
const teamMembers = [
  {
    id: 1,
    name: "Kadir Yılmaz",
    title: "Kurucu Usta",
    description: "55 yıllık kebapçılık tecrübesiyle işletmemizin kurucusu ve baş ustası.",
    image: "/images/kadir-usta.jpg",
    socialMedia: {
      instagram: "https://instagram.com",
      linkedin: "https://linkedin.com"
    }
  },
  {
    id: 2,
    name: "Ahmet Yılmaz",
    title: "İşletme Müdürü",
    description: "Kadir Usta'nın oğlu, 20 yıllık tecrübesiyle işletmenin yönetiminden sorumlu.",
    image: "/images/ahmet-yilmaz.jpg",
    socialMedia: {
      instagram: "https://instagram.com",
      linkedin: "https://linkedin.com"
    }
  },
  {
    id: 3,
    name: "Ayşe Yılmaz",
    title: "Şef",
    description: "Kadir Usta'nın kızı, özel tarifleri ve mezelerle menüyü zenginleştiriyor.",
    image: "/images/ayse-yilmaz.jpg",
    socialMedia: {
      instagram: "https://instagram.com",
      linkedin: "https://linkedin.com"
    }
  },
  {
    id: 4,
    name: "Mehmet Demir",
    title: "Baş Garson",
    description: "15 yıldır ekibimizde, misafirlerimize en iyi hizmeti sunmak için çalışıyor.",
    image: "/images/mehmet-demir.jpg",
    socialMedia: {
      instagram: "https://instagram.com",
      linkedin: "https://linkedin.com"
    }
  }
];

const OurTeam = () => {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };
  
  const itemVariants = {
    hidden: { y: 30, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        type: "spring",
        stiffness: 100,
        damping: 15
      }
    }
  };
  
  return (
    <SectionContainer ref={ref}>
      <SectionHeader>
        <SectionTitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
        >
          Ekibimiz
        </SectionTitle>
        <SectionDescription
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          Kebapçı Kadirin arkasındaki güç, tutkulu ve deneyimli ekibimiz. Her biri kendi alanında uzman olan çalışanlarımız, size en iyi hizmeti sunmak için burada.
        </SectionDescription>
      </SectionHeader>
      
      <motion.div
        variants={containerVariants}
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
      >
        <TeamGrid>
          {teamMembers.map((member) => (
            <TeamMemberCard key={member.id} variants={itemVariants}>
              <TeamMemberImageContainer>
                <Image
                  src={member.image}
                  alt={member.name}
                  fill
                  style={{objectFit: "cover"}}
                />
              </TeamMemberImageContainer>
              <TeamMemberContent>
                <TeamMemberName>{member.name}</TeamMemberName>
                <TeamMemberTitle>{member.title}</TeamMemberTitle>
                <TeamMemberDescription>{member.description}</TeamMemberDescription>
                <SocialLinks>
                  <SocialLink href={member.socialMedia.instagram} target="_blank" rel="noopener noreferrer">
                    <FiInstagram />
                  </SocialLink>
                  <SocialLink href={member.socialMedia.linkedin} target="_blank" rel="noopener noreferrer">
                    <FiLinkedin />
                  </SocialLink>
                </SocialLinks>
              </TeamMemberContent>
            </TeamMemberCard>
          ))}
        </TeamGrid>
      </motion.div>
    </SectionContainer>
  );
};

export default OurTeam;
=== ./src/app/components/about/Timeline.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background-color: ${theme.colors.background.main};
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const SectionHeader = styled.div`
  text-align: center;
  margin-bottom: 4rem;
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
  position: relative;
  display: inline-block;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
`;

const TimelineContainer = styled.div`
  position: relative;
  max-width: 1000px;
  margin: 0 auto;
  
  &:after {
    content: '';
    position: absolute;
    width: 4px;
    background-color: ${theme.colors.secondary.beige};
    top: 0;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    
    ${theme.media.sm} {
      left: 50%;
    }
  }
`;

const TimelineItem = styled(motion.div)`
  padding: 0 30px 60px 30px;
  position: relative;
  width: 100%;
  
  ${theme.media.sm} {
    width: 50%;
    left: ${props => props.position === 'left' ? '0' : '50%'};
  }
  
  &:last-child {
    padding-bottom: 0;
  }
`;

const TimelineContent = styled.div`
  padding: 1.5rem;
  background-color: ${theme.colors.background.main};
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  position: relative;
  
  ${theme.media.sm} {
    &:after {
      content: '';
      position: absolute;
      top: calc(50% - 10px);
      right: ${props => props.position === 'left' ? '-10px' : 'auto'};
      left: ${props => props.position === 'right' ? '-10px' : 'auto'};
      width: 20px;
      height: 20px;
      background-color: ${theme.colors.background.main};
      transform: rotate(45deg);
    }
  }
`;

const TimelineDate = styled.div`
  position: absolute;
  width: 80px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: ${theme.colors.primary.red};
  color: ${theme.colors.text.light};
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize.base};
  border-radius: 4px;
  top: calc(50% - 15px);
  
  ${theme.media.sm} {
    left: ${props => props.position === 'left' ? 'calc(100% + 15px)' : 'auto'};
    right: ${props => props.position === 'right' ? 'calc(100% + 15px)' : 'auto'};
  }
  
  /* Mobil görünüm için */
  ${theme.media.xs} {
    left: -30px;
  }
`;

const TimelineDot = styled.div`
  position: absolute;
  width: 20px;
  height: 20px;
  background-color: ${theme.colors.primary.orange};
  border-radius: 50%;
  top: calc(50% - 10px);
  z-index: 1;
  box-shadow: 0 0 0 4px ${theme.colors.secondary.beige};
  
  ${theme.media.sm} {
    left: ${props => props.position === 'left' ? 'calc(100% - 10px)' : '-10px'};
  }
  
  /* Mobil görünüm için */
  ${theme.media.xs} {
    left: 0;
  }
`;

const TimelineTitle = styled.h3`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize.xl};
  color: ${theme.colors.text.dark};
  margin-bottom: 0.5rem;
`;

const TimelineDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.muted};
  line-height: 1.6;
`;

// Zaman çizelgesi verileri
const timelineEvents = [
  {
    id: 1,
    year: 1965,
    title: "İlk Adımlar",
    description: "Adana'da kebapçı çırağı olarak mesleğe ilk adımımı attım.",
    position: "left"
  },
  {
    id: 2,
    year: 1975,
    title: "Ustalık Beratı",
    description: "Adana Esnaf ve Sanatkarlar Odası'ndan ustalık beratımı aldım.",
    position: "right"
  },
  {
    id: 3,
    year: 1980,
    title: "Mersin'e Göç",
    description: "Ailemle birlikte Mersin'e yerleşerek yeni bir başlangıç yaptım.",
    position: "left"
  },
  {
    id: 4,
    year: 1985,
    title: "İlk Dükkan",
    description: "Mersin'de ilk kebap dükkanımı açtım. Küçük ama sıcak bir mekan...",
    position: "right"
  },
  {
    id: 5,
    year: 1998,
    title: "Büyüme ve Tanınma",
    description: "Artan talep üzerine daha büyük bir restorana taşındık ve yerel basında tanınmaya başladık.",
    position: "left"
  },
  {
    id: 6,
    year: 2005,
    title: "Aile Geleneği",
    description: "Oğlum ve kızım işletmeye dahil oldu, aile geleneği devam etmeye başladı.",
    position: "right"
  },
  {
    id: 7,
    year: 2015,
    title: "Şimdiki Mekan",
    description: "Şu anki modern ve geniş mekanımızı açarak daha fazla misafirimizi ağırlamaya başladık.",
    position: "left"
  }
];

const Timeline = () => {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  return (
    <SectionContainer ref={ref}>
      <SectionHeader>
        <SectionTitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
        >
          Tarihçemiz
        </SectionTitle>
      </SectionHeader>
      
      <TimelineContainer>
        {timelineEvents.map((event, index) => (
          <TimelineItem 
            key={event.id}
            position={event.position}
            initial={{ opacity: 0, x: event.position === 'left' ? -50 : 50 }}
            animate={inView ? { opacity: 1, x: 0 } : { opacity: 0, x: event.position === 'left' ? -50 : 50 }}
            transition={{ duration: 0.6, delay: index * 0.1 }}
          >
            <TimelineContent position={event.position}>
              <TimelineTitle>{event.title}</TimelineTitle>
              <TimelineDescription>{event.description}</TimelineDescription>
            </TimelineContent>
            <TimelineDate position={event.position}>{event.year}</TimelineDate>
            <TimelineDot position={event.position} />
          </TimelineItem>
        ))}
      </TimelineContainer>
    </SectionContainer>
  );
};

export default Timeline;
=== ./src/app/components/contact/ContactPage.js ===
"use client"

import React, { useState } from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { theme } from '../../styles/theme';
import { FiPhone, FiMail, FiMapPin, FiClock, FiCheck } from 'react-icons/fi';

const PageContainer = styled.div`
  padding-top: 80px; // Headerın altında kalmaması için
`;

const HeroSection = styled.section`
  height: 40vh;
  background-image: url('/images/contact-hero.jpg');
  background-size: cover;
  background-position: center;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  
  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
  }
`;

const HeroContent = styled.div`
  text-align: center;
  z-index: 1;
  color: ${theme.colors.text.light};
`;

const PageTitle = styled.h1`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['4xl']};
  margin-bottom: 1rem;
`;

const PageDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  max-width: 600px;
  margin: 0 auto;
`;

const ContactSection = styled.section`
  padding: 5rem 1rem;
  
  ${theme.media.md} {
    padding: 5rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 5rem 4rem;
  }
`;

const ContactGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 3rem;
  
  ${theme.media.lg} {
    grid-template-columns: 1fr 1fr;
  }
`;

const ContactInfo = styled.div`
  padding: 2rem;
  background-color: ${theme.colors.background.alt};
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
`;

const ContactTitle = styled.h2`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize['2xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 2rem;
  position: relative;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 50px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
`;

const ContactItem = styled.div`
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  margin-bottom: 1.5rem;
`;

const ContactIcon = styled.div`
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: ${theme.colors.primary.red};
  color: ${theme.colors.text.light};
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.25rem;
  flex-shrink: 0;
`;

const ContactText = styled.div`
  font-family: ${theme.typography.fontFamily.body};
`;

const ContactLabel = styled.h3`
  font-size: ${theme.typography.fontSize.base};
  font-weight: ${theme.typography.fontWeight.semibold};
  color: ${theme.colors.text.dark};
  margin-bottom: 0.25rem;
`;

const ContactDetail = styled.p`
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.muted};
  line-height: 1.6;
`;

const MapContainer = styled.div`
  margin-top: 2rem;
  height: 300px;
  border-radius: 8px;
  overflow: hidden;
`;

const ReservationForm = styled.div`
  padding: 2rem;
  background-color: ${theme.colors.background.main};
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
`;

const Form = styled.form`
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
`;

const FormGroup = styled.div`
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
`;

const FormRow = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
  
  ${theme.media.sm} {
    grid-template-columns: 1fr 1fr;
  }
`;

const Label = styled.label`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.dark};
`;

const Input = styled.input`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  padding: 0.75rem 1rem;
  border: 1px solid ${theme.colors.secondary.beige};
  border-radius: 4px;
  transition: border-color 0.3s ease;
  
  &:focus {
    outline: none;
    border-color: ${theme.colors.primary.orange};
  }
`;

const Select = styled.select`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  padding: 0.75rem 1rem;
  border: 1px solid ${theme.colors.secondary.beige};
  border-radius: 4px;
  background-color: white;
  transition: border-color 0.3s ease;
  
  &:focus {
    outline: none;
    border-color: ${theme.colors.primary.orange};
  }
`;

const Textarea = styled.textarea`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  padding: 0.75rem 1rem;
  border: 1px solid ${theme.colors.secondary.beige};
  border-radius: 4px;
  resize: vertical;
  min-height: 150px;
  transition: border-color 0.3s ease;
  
  &:focus {
    outline: none;
    border-color: ${theme.colors.primary.orange};
  }
`;

const SubmitButton = styled(motion.button)`
  background-color: ${theme.colors.primary.red};
  color: ${theme.colors.text.light};
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  font-size: ${theme.typography.fontSize.base};
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  display: block;
  width: 100%;
  margin-top: 1rem;
  
  &:hover {
    background-color: ${theme.colors.primary.orange};
  }
`;

const SuccessMessage = styled(motion.div)`
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background-color: #e6f4ea;
  border-left: 4px solid #34a853;
  padding: 1rem;
  border-radius: 4px;
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: #1e8e3e;
  margin-top: 1rem;
`;

export default function ContactPage() {
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    date: '',
    time: '',
    guests: '',
    message: ''
  });
  
  const [isSubmitted, setIsSubmitted] = useState(false);
  
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prevData => ({
      ...prevData,
      [name]: value
    }));
  };
  
  const handleSubmit = (e) => {
    e.preventDefault();
    // Burada form verilerinin işlenmesi için gerekli kodlar yazılacak
    // API'ye gönderme, veritabanına kaydetme vb.
    
    console.log(formData);
    setIsSubmitted(true);
    
    // Form gönderildikten sonra formu temizleyelim
    setFormData({
      name: '',
      phone: '',
      email: '',
      date: '',
      time: '',
      guests: '',
      message: ''
    });
    
    // 5 saniye sonra başarı mesajını kaldıralım
    setTimeout(() => {
      setIsSubmitted(false);
    }, 5000);
  };
  
  return (
    <PageContainer>
      <HeroSection>
        <HeroContent>
          <PageTitle>İletişim & Rezervasyon</PageTitle>
          <PageDescription>Bize ulaşın, masanızı ayırtın, özel anlarınızı unutulmaz kılalım.</PageDescription>
        </HeroContent>
      </HeroSection>
      
      <ContactSection>
        <ContactGrid>
          <ContactInfo>
            <ContactTitle>İletişim Bilgilerimiz</ContactTitle>
            
            <ContactItem>
              <ContactIcon>
                <FiPhone />
              </ContactIcon>
              <ContactText>
                <ContactLabel>Telefon</ContactLabel>
                <ContactDetail>
                  +90 246 218 24 60<br />
                  +90 246 212 17 71
                </ContactDetail>
              </ContactText>
            </ContactItem>
            
            <ContactItem>
              <ContactIcon>
                <FiMail />
              </ContactIcon>
              <ContactText>
                <ContactLabel>E-posta</ContactLabel>
                <ContactDetail>info@kebapcikadir.com.tr</ContactDetail>
              </ContactText>
            </ContactItem>
            
            <ContactItem>
              <ContactIcon>
                <FiMapPin />
              </ContactIcon>
              <ContactText>
                <ContactLabel>Adres</ContactLabel>
                <ContactDetail>
                  Ulucami Yanı Valilik Arkası<br />
                  Kebapçılar Arastası No: 8<br />
                  ISPARTA / TÜRKİYE
                </ContactDetail>
              </ContactText>
            </ContactItem>
            
            <ContactItem>
              <ContactIcon>
                <FiClock />
              </ContactIcon>
              <ContactText>
                <ContactLabel>Çalışma Saatleri</ContactLabel>
                <ContactDetail>
                  Pazartesi - Pazar: 11:00 - 23:00<br />
                  (Mutfak kapanış: 22:30)
                </ContactDetail>
              </ContactText>
            </ContactItem>
            
            <MapContainer>
              <iframe 
                src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3192.3857167837535!2d30.52834911516745!3d37.76736297975916!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x14c2f0b6823b8d3b%3A0x8b2c2d8b5e7f6a8c!2sUlucami%2C%20Kebap%C3%A7%C4%B1lar%20Arasta%20Sokak%20No%3A8%2C%2032100%20Merkez%2FIsparta%2C%20T%C3%BCrkiye!5e0!3m2!1str!2str!4v1635678901234!5m2!1str!2str" 
                width="100%" 
                height="100%" 
                style={{ border: 0 }} 
                allowFullScreen="" 
                loading="lazy" 
                referrerPolicy="no-referrer-when-downgrade">
              </iframe>
            </MapContainer>
          </ContactInfo>
          
          <ReservationForm>
            <ContactTitle>Rezervasyon Formu</ContactTitle>
            
            <Form onSubmit={handleSubmit}>
              <FormGroup>
                <Label htmlFor="name">Adınız Soyadınız</Label>
                <Input 
                  type="text" 
                  id="name" 
                  name="name" 
                  value={formData.name}
                  onChange={handleChange}
                  required 
                />
              </FormGroup>
              
              <FormRow>
                <FormGroup>
                  <Label htmlFor="phone">Telefon</Label>
                  <Input 
                    type="tel" 
                    id="phone" 
                    name="phone" 
                    value={formData.phone}
                    onChange={handleChange}
                    required 
                  />
                </FormGroup>
                
                <FormGroup>
                  <Label htmlFor="email">E-posta</Label>
                  <Input 
                    type="email" 
                    id="email" 
                    name="email" 
                    value={formData.email}
                    onChange={handleChange}
                    required 
                  />
                </FormGroup>
              </FormRow>
              
              <FormRow>
                <FormGroup>
                  <Label htmlFor="date">Tarih</Label>
                  <Input 
                    type="date" 
                    id="date" 
                    name="date" 
                    value={formData.date}
                    onChange={handleChange}
                    required 
                  />
                </FormGroup>
                
                <FormGroup>
                  <Label htmlFor="time">Saat</Label>
                  <Select 
                    id="time" 
                    name="time" 
                    value={formData.time}
                    onChange={handleChange}
                    required
                  >
                    <option value="">Seçiniz</option>
                    <option value="11:00">11:00</option>
                    <option value="11:30">11:30</option>
                    <option value="12:00">12:00</option>
                    <option value="12:30">12:30</option>
                    <option value="13:00">13:00</option>
                    <option value="13:30">13:30</option>
                    <option value="14:00">14:00</option>
                    <option value="14:30">14:30</option>
                    <option value="15:00">15:00</option>
                    <option value="18:00">18:00</option>
                    <option value="18:30">18:30</option>
                    <option value="19:00">19:00</option>
                    <option value="19:30">19:30</option>
                    <option value="20:00">20:00</option>
                    <option value="20:30">20:30</option>
                    <option value="21:00">21:00</option>
                    <option value="21:30">21:30</option>
                    <option value="22:00">22:00</option>
                  </Select>
                </FormGroup>
              </FormRow>
              
              <FormGroup>
                <Label htmlFor="guests">Kişi Sayısı</Label>
                <Select 
                  id="guests" 
                  name="guests" 
                  value={formData.guests}
                  onChange={handleChange}
                  required
                >
                  <option value="">Seçiniz</option>
                  <option value="1">1 kişi</option>
                  <option value="2">2 kişi</option>
                  <option value="3">3 kişi</option>
                  <option value="4">4 kişi</option>
                  <option value="5">5 kişi</option>
                  <option value="6">6 kişi</option>
                  <option value="7">7 kişi</option>
                  <option value="8">8 kişi</option>
                  <option value="9+">9+ kişi (Lütfen mesajda belirtiniz)</option>
                </Select>
              </FormGroup>
              
              <FormGroup>
                <Label htmlFor="message">Özel İstekler / Notlar</Label>
                <Textarea 
                  id="message" 
                  name="message" 
                  value={formData.message}
                  onChange={handleChange}
                  placeholder="Özel gün kutlaması, alerji durumu, masa tercihi gibi özel isteklerinizi belirtebilirsiniz..."
                ></Textarea>
              </FormGroup>
              
              <SubmitButton
                type="submit"
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
              >
                Rezervasyon Yap
              </SubmitButton>
              
              {isSubmitted && (
                <SuccessMessage
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5 }}
                >
                  <FiCheck /> Rezervasyon talebiniz alınmıştır. En kısa sürede sizinle iletişime geçeceğiz.
                </SuccessMessage>
              )}
            </Form>
          </ReservationForm>
        </ContactGrid>
      </ContactSection>
    </PageContainer>
  );
}
=== ./src/app/components/gallery/GalleryPage.js ===
"use client"

import React, { useState } from 'react';
import styled from 'styled-components';
import { motion, AnimatePresence } from 'framer-motion';
import { theme } from '../../styles/theme';
import Image from 'next/image';
import { FiX } from 'react-icons/fi';

const PageContainer = styled.div`
  padding-top: 80px; // Headerın altında kalmaması için
`;

const HeroSection = styled.section`
  height: 40vh;
  background-image: url('/images/gallery-hero.jpg');
  background-size: cover;
  background-position: center;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  
  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
  }
`;

const HeroContent = styled.div`
  text-align: center;
  z-index: 1;
  color: ${theme.colors.text.light};
`;

const PageTitle = styled.h1`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['4xl']};
  margin-bottom: 1rem;
`;

const PageDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  max-width: 600px;
  margin: 0 auto;
`;

const GallerySection = styled.section`
  padding: 5rem 1rem;
  
  ${theme.media.md} {
    padding: 5rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 5rem 4rem;
  }
`;

const FilterTabs = styled.div`
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 0.5rem;
  margin-bottom: 3rem;
  
  ${theme.media.md} {
    gap: 1rem;
  }
`;

const FilterTab = styled.button`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  font-size: ${theme.typography.fontSize.base};
  padding: 0.75rem 1.5rem;
  border: 2px solid ${props => props.active ? theme.colors.primary.red : theme.colors.secondary.beige};
  background-color: ${props => props.active ? theme.colors.primary.red : 'transparent'};
  color: ${props => props.active ? theme.colors.text.light : theme.colors.text.dark};
  border-radius: 30px;
  cursor: pointer;
  transition: all 0.3s ease;
  
  &:hover {
    background-color: ${props => props.active ? theme.colors.primary.red : theme.colors.secondary.beige};
  }
`;

const GalleryGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  gap: 1.5rem;
  
  ${theme.media.sm} {
    grid-template-columns: repeat(2, 1fr);
  }
  
  ${theme.media.md} {
    grid-template-columns: repeat(3, 1fr);
  }
  
  ${theme.media.lg} {
    grid-template-columns: repeat(4, 1fr);
  }
`;

const GalleryItem = styled(motion.div)`
  position: relative;
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
  aspect-ratio: 1;
  
  &:hover div {
    opacity: 1;
  }
`;

const GalleryImageOverlay = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.3s ease;
  color: ${theme.colors.text.light};
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  font-size: ${theme.typography.fontSize.lg};
  text-align: center;
  padding: 1rem;
`;

const LightboxOverlay = styled(motion.div)`
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 2rem;
`;

const LightboxImage = styled.div`
  position: relative;
  width: 90%;
  height: 80%;
  max-width: 1200px;
  
  img {
    object-fit: contain;
  }
`;

const LightboxClose = styled.button`
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: transparent;
  border: none;
  color: ${theme.colors.text.light};
  font-size: 2rem;
  cursor: pointer;
  z-index: 1001;
`;

const LightboxCaption = styled.div`
  position: absolute;
  bottom: 1rem;
  left: 0;
  width: 100%;
  text-align: center;
  color: ${theme.colors.text.light};
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  background: rgba(0, 0, 0, 0.5);
  padding: 0.5rem;
`;

const NoItemsMessage = styled.p`
  text-align: center;
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.muted};
  margin: 3rem 0;
`;

// Örnek galeri kategorileri ve öğeleri
const galleryCategories = [
  { id: 'all', name: 'Tümü' },
  { id: 'food', name: 'Lezzetler' },
  { id: 'place', name: 'Mekan' },
  { id: 'team', name: 'Ekibimiz' },
  { id: 'events', name: 'Etkinlikler' }
];

const galleryItems = [
  {
    id: 1,
    title: 'Adana Kebap',
    category: 'food',
    image: '/images/adana-kebap.jpg'
  },
  {
    id: 2,
    title: 'Karışık Kebap',
    category: 'food',
    image: '/images/karisik-kebap.jpg'
  },
  {
    id: 3,
    title: 'Künefe',
    category: 'food',
    image: '/images/kunefe.jpg'
  },
  {
    id: 4,
    title: 'İç Mekan',
    category: 'place',
    image: '/images/restaurant-interior.jpg'
  },
  {
    id: 5,
    title: 'Bahçe',
    category: 'place',
    image: '/images/restaurant-garden.jpg'
  },
  {
    id: 6,
    title: 'Kadir Usta',
    category: 'team',
    image: '/images/kadir-usta.jpg'
  },
  {
    id: 7,
    title: 'Ekibimiz',
    category: 'team',
    image: '/images/team.jpg'
  },
  {
    id: 8,
    title: 'Özel Gece',
    category: 'events',
    image: '/images/special-event.jpg'
  }
];

export default function GalleryPage() {
  const [activeCategory, setActiveCategory] = useState('all');
  const [selectedImage, setSelectedImage] = useState(null);
  
  const filteredItems = activeCategory === 'all' 
    ? galleryItems 
    : galleryItems.filter(item => item.category === activeCategory);
  
  const openLightbox = (item) => {
    setSelectedImage(item);
    document.body.style.overflow = 'hidden';
  };
  
  const closeLightbox = () => {
    setSelectedImage(null);
    document.body.style.overflow = 'auto';
  };
  
  return (
    <PageContainer>
      <HeroSection>
        <HeroContent>
          <PageTitle>Galeri</PageTitle>
          <PageDescription>Lezzetlerimiz, mekanımız ve özel anlardan kareler.</PageDescription>
        </HeroContent>
      </HeroSection>
      
      <GallerySection>
        <FilterTabs>
          {galleryCategories.map(category => (
            <FilterTab
              key={category.id}
              active={activeCategory === category.id}
              onClick={() => setActiveCategory(category.id)}
            >
              {category.name}
            </FilterTab>
          ))}
        </FilterTabs>
        
        <AnimatePresence mode="wait">
          {filteredItems.length > 0 ? (
            <GalleryGrid
              as={motion.div}
              key={activeCategory}
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              transition={{ duration: 0.3 }}
            >
              {filteredItems.map(item => (
                <GalleryItem
                  key={item.id}
                  initial={{ opacity: 0, scale: 0.9 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5 }}
                  onClick={() => openLightbox(item)}
                >
                  <Image
                    src={item.image}
                    alt={item.title}
                    fill
                    style={{objectFit: "cover"}}
                  />
                  <GalleryImageOverlay>
                    {item.title}
                  </GalleryImageOverlay>
                </GalleryItem>
              ))}
            </GalleryGrid>
          ) : (
            <NoItemsMessage
              as={motion.p}
              key="no-items"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
            >
              Bu kategoride fotoğraf bulunmamaktadır.
            </NoItemsMessage>
          )}
        </AnimatePresence>
      </GallerySection>
      
      <AnimatePresence>
        {selectedImage && (
          <LightboxOverlay
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 0.3 }}
            onClick={closeLightbox}
          >
            <LightboxClose onClick={closeLightbox}>
              <FiX />
            </LightboxClose>
            <LightboxImage onClick={(e) => e.stopPropagation()}>
              <Image
                src={selectedImage.image}
                alt={selectedImage.title}
                fill
                style={{objectFit: "contain"}}
              />
              <LightboxCaption>
                {selectedImage.title}
              </LightboxCaption>
            </LightboxImage>
          </LightboxOverlay>
        )}
      </AnimatePresence>
    </PageContainer>
  );
}
=== ./src/app/components/home/CurrentOwnerSpeech.js ===
"use client"

import React, { useState, useEffect, useMemo } from 'react';
import styled, { ThemeProvider } from 'styled-components'; // ThemeProvider eklendi
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme as importedThemeFile } from '../../styles/theme'; // Varsayılan theme dosyanız
import Image from 'next/image';
import { FiQuote, FiAward, FiHeart, FiTrendingUp, FiUsers } from 'react-icons/fi';

// --- START: Theme Handling ---
// Bu kısım, importedThemeFile'ın undefined veya eksik olması durumunda
// styled-components'in hata vermesini engellemek için eklendi.
const fallbackTheme = {
  colors: {
    background: { main: '#ffffff', alt: '#f8f9fa' },
    secondary: { offwhite: '#f1f3f5' },
    primary: { red: '#e63946', orange: '#f77f00', yellow: '#fcbf49' },
    text: { light: '#ffffff', dark: '#212529', muted: '#6c757d' },
  },
  media: {
    xs: '@media (min-width: 480px)',
    sm: '@media (min-width: 640px)',
    md: '@media (min-width: 768px)',
    lg: '@media (min-width: 1024px)',
    xl: '@media (min-width: 1280px)',
  },
  typography: {
    fontFamily: {
      heading: 'Arial, Helvetica, sans-serif',
      body: 'Roboto, Arial, sans-serif',
      accent: 'Georgia, serif',
    },
    fontWeight: {
      light: 300,
      regular: 400,
      medium: 500,
      bold: 700,
    },
    fontSize: {
      xs: '0.75rem', sm: '0.875rem', base: '1rem', lg: '1.125rem',
      xl: '1.25rem', '2xl': '1.5rem', '3xl': '1.875rem', '4xl': '2.25rem',
      '5xl': '3rem',
    },
  },
};

// Deep merge utility (basit versiyon)
function deepMerge(target, source) {
  const output = { ...target };
  if (isObject(target) && isObject(source)) {
    Object.keys(source).forEach(key => {
      if (isObject(source[key])) {
        if (!(key in target)) Object.assign(output, { [key]: source[key] });
        else output[key] = deepMerge(target[key], source[key]);
      } else {
        Object.assign(output, { [key]: source[key] });
      }
    });
  }
  return output;
}

function isObject(item) {
  return (item && typeof item === 'object' && !Array.isArray(item));
}

// Nihai tema objesi: importedThemeFile, fallbackTheme ile birleştirilir.
// Bu, styled-components tanımları yapılmadan ÖNCE olmalı.
const theme = deepMerge(fallbackTheme, importedThemeFile || {});
// --- END: Theme Handling ---


// --- START: Styled Components Definitions ---
// Bu tanımlar YUKARIDAKİ `theme` objesini `props.theme` üzerinden kullanır.
// BU KISIMDA DEĞİŞİKLİK YOK, `props.theme` KULLANIMI DEVAM EDİYOR.
const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background: linear-gradient(135deg, 
    ${props => props.theme.colors.background.alt} 0%, 
    ${props => props.theme.colors.secondary.offwhite} 100%
  );
  position: relative;
  overflow: hidden;
  
  ${props => props.theme.media.md} {
    padding: 8rem 2rem;
  }
  
  ${props => props.theme.media.lg} {
    padding: 10rem 4rem;
  }
`;

const BackgroundPattern = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(circle at 25% 25%, rgba(200, 44, 27, 0.05) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, rgba(216, 91, 10, 0.05) 0%, transparent 50%);
  z-index: 0;
`;

const BackgroundQuote = styled.div`
  position: absolute;
  top: 20%;
  right: 5%;
  font-size: 20rem;
  color: ${props => props.theme.colors.primary.red};
  opacity: 0.03;
  z-index: 0;
  font-family: ${props => props.theme.typography.fontFamily.accent};
  transform: rotate(15deg);
  
  ${props => props.theme.media.sm} {
    font-size: 25rem;
  }
  
  ${props => props.theme.media.lg} {
    font-size: 30rem;
  }
`;

const ContentContainer = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
  z-index: 1;
`;

const SpeechWrapper = styled(motion.div)`
  display: grid;
  grid-template-columns: 1fr;
  gap: 4rem;
  align-items: center;
  
  ${props => props.theme.media.lg} {
    grid-template-columns: 400px 1fr;
  }
`;

const OwnerSection = styled(motion.div)`
  position: relative;
  justify-self: center;
  
  ${props => props.theme.media.lg} {
    justify-self: start;
  }
`;

const OwnerFrame = styled.div`
  position: relative;
  width: 300px;
  height: 380px;
  
  ${props => props.theme.media.md} {
    width: 350px;
    height: 420px;
  }
`;

const OwnerImageWrapper = styled.div`
  position: relative;
  width: 100%;
  height: 75%;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2);
  
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(180deg, transparent 0%, rgba(0,0,0,0.1) 100%);
    z-index: 1;
  }
  
  &:after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, 
      ${props => props.theme.colors.primary.red}, 
      ${props => props.theme.colors.primary.orange},
      ${props => props.theme.colors.primary.yellow}
    );
    border-radius: 18px;
    z-index: -1;
  }
`;

const OwnerNameCard = styled(motion.div)`
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 95%;
  background: linear-gradient(135deg, 
    ${props => props.theme.colors.primary.red} 0%, 
    ${props => props.theme.colors.primary.orange} 100%
  );
  padding: 1.5rem;
  border-radius: 12px;
  text-align: center;
  box-shadow: 0 8px 25px rgba(200, 44, 27, 0.3);
`;

const OwnerName = styled.h3`
  font-family: ${props => props.theme.typography.fontFamily.heading};
  font-weight: ${props => props.theme.typography.fontWeight.bold};
  font-size: ${props => props.theme.typography.fontSize.xl};
  color: ${props => props.theme.colors.text.light};
  margin-bottom: 0.5rem;
`;

const OwnerTitle = styled.p`
  font-family: ${props => props.theme.typography.fontFamily.body};
  font-size: ${props => props.theme.typography.fontSize.base};
  color: ${props => props.theme.colors.secondary.offwhite};
  margin-bottom: 0.5rem;
`;

const OwnerYears = styled.p`
  font-family: ${props => props.theme.typography.fontFamily.accent};
  font-size: ${props => props.theme.typography.fontSize.sm};
  color: ${props => props.theme.colors.secondary.offwhite};
  opacity: 0.9;
`;

const SpeechContainer = styled.div`
  position: relative;
`;

const SpeechHeader = styled.div`
  margin-bottom: 2rem;
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${props => props.theme.typography.fontFamily.heading};
  font-weight: ${props => props.theme.typography.fontWeight.bold};
  font-size: ${props => props.theme.typography.fontSize['2xl']};
  color: ${props => props.theme.colors.text.dark};
  margin-bottom: 0.5rem;
  
  ${props => props.theme.media.md} {
    font-size: ${props => props.theme.typography.fontSize['3xl']};
  }
`;

const SectionSubtitle = styled(motion.p)`
  font-family: ${props => props.theme.typography.fontFamily.body};
  font-size: ${props => props.theme.typography.fontSize.lg};
  color: ${props => props.theme.colors.text.muted};
  font-style: italic;
`;

const SpeechQuoteContainer = styled(motion.div)`
  position: relative;
  background-color: ${props => props.theme.colors.background.main};
  padding: 2.5rem;
  border-radius: 16px;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
  border-left: 5px solid ${props => props.theme.colors.primary.red};
  
  ${props => props.theme.media.md} {
    padding: 3rem;
  }
`;

const QuoteIcon = styled(motion.div)`
  position: absolute;
  top: -15px;
  left: 30px;
  width: 40px;
  height: 40px;
  background-color: ${props => props.theme.colors.primary.red};
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: ${props => props.theme.colors.text.light};
  font-size: 1.5rem;
  box-shadow: 0 4px 15px rgba(200, 44, 27, 0.3);
`;

const QuoteText = styled.p`
  font-family: ${props => props.theme.typography.fontFamily.body};
  font-size: ${props => props.theme.typography.fontSize.lg};
  color: ${props => props.theme.colors.text.dark};
  line-height: 1.8;
  margin-bottom: 1.5rem;
  min-height: 10em; 
  
  ${props => props.theme.media.md} {
    font-size: ${props => props.theme.typography.fontSize.xl};
  }
`;

const QuoteHighlight = styled.span`
  background: linear-gradient(120deg, ${props => props.theme.colors.primary.yellow}40 0%, ${props => props.theme.colors.primary.yellow}40 100%);
  background-repeat: no-repeat;
  background-size: 100% 0.4em;
  background-position: 0 88%;
  padding: 0 0.2rem;
  font-weight: ${props => props.theme.typography.fontWeight.medium};
  color: ${props => props.theme.colors.text.dark};
`;

const Cursor = styled(motion.span)`
  display: inline-block;
  width: 3px;
  height: 1.2em; 
  background-color: ${props => props.theme.colors.primary.red};
  margin-left: 3px;
  vertical-align: text-bottom; 
`;

const ExperienceGrid = styled(motion.div)`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 1.5rem;
  margin-top: 3rem;
`;

const ExperienceCard = styled(motion.div)`
  background: linear-gradient(135deg, 
    ${props => props.theme.colors.secondary.offwhite} 0%, 
    ${props => props.theme.colors.background.main} 100%
  );
  padding: 1.5rem;
  border-radius: 12px;
  text-align: center;
  border: 2px solid transparent;
  transition: all 0.3s ease;
  
  &:hover {
    border-color: ${props => props.theme.colors.primary.orange};
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }
`;

const ExperienceIcon = styled.div`
  font-size: 2rem;
  color: ${props => props.theme.colors.primary.red};
  margin-bottom: 1rem;
`;

const ExperienceNumber = styled.div`
  font-family: ${props => props.theme.typography.fontFamily.accent};
  font-size: ${props => props.theme.typography.fontSize['2xl']};
  font-weight: ${props => props.theme.typography.fontWeight.bold};
  color: ${props => props.theme.colors.primary.red};
  margin-bottom: 0.5rem;
`;

const ExperienceLabel = styled.p`
  font-family: ${props => props.theme.typography.fontFamily.body};
  font-size: ${props => props.theme.typography.fontSize.base};
  color: ${props => props.theme.colors.text.dark};
  font-weight: ${props => props.theme.typography.fontWeight.medium};
`;
// --- END: Styled Components Definitions ---


const CurrentOwnerSpeech = () => {
  const [currentParagraphIndex, setCurrentParagraphIndex] = useState(0);
  const [displayedChars, setDisplayedChars] = useState(0);
  const [isTypingComplete, setIsTypingComplete] = useState(false);

  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });

  useEffect(() => {
    if (typeof importedThemeFile === 'undefined' || Object.keys(importedThemeFile).length === 0) {
      console.warn(
        "CurrentOwnerSpeech: The `theme` object from '../../styles/theme' seems to be empty or undefined. " +
        "Falling back to default theme values. Styles may not appear as expected. " +
        "Please check your theme export from '../../styles/theme.js'."
      );
    }
    if (typeof FiQuote !== 'function' && typeof FiQuote !== 'object') { 
      console.error("CurrentOwnerSpeech: FiQuote icon from react-icons is undefined. Check react-icons installation and import.");
    }
  }, []);

  const speechParagraphs = useMemo(() => [
    "Hüseyin Açıkalın olarak, 1851'den beri süren bu mukaddes geleneğin dördüncü kuşak temsilcisiyim. Büyükbabam Hafız Dede'nin kurduğu bu yolda yürümek, bana hem büyük bir gurur hem de büyük bir sorumluluk veriyor.",
    "Çocukluğumdan beri bu mutfağın kokularıyla büyüdüm. Babam Kadir Açıkalın'dan öğrendiğim <QuoteHighlight>her tarif, her pişirme tekniği</QuoteHighlight>, nesiller boyu süren bir hikayenin parçası. Bu miras sadece bir meslek değil, bir yaşam felsefesi.",
    "Günümüzde teknoloji ve modernleşmeyle birlikte, eski usullerle modern hijyen standartlarını harmanlıyoruz. <QuoteHighlight>Beş yıldızlı mutfağımızda</QuoteHighlight>, dedelerimizin tariflerini en kaliteli malzemelerle buluşturuyoruz.",
    "Her müşterimize kapımızı açtığımızda, sanki evimize misafir gelmişçesine karşılıyoruz. Çünkü bizim için kebap yapmak sadece iş değil, bir sanat ve sevgi gösterisidir."
  ], []);

  const parseParagraph = (paragraphText) => {
    const parts = [];
    let lastIndex = 0;
    const regex = /<QuoteHighlight>(.*?)<\/QuoteHighlight>/g; 
    let match;

    while ((match = regex.exec(paragraphText)) !== null) {
      if (match.index > lastIndex) {
        parts.push({ type: 'text', content: paragraphText.substring(lastIndex, match.index) });
      }
      parts.push({ type: 'highlight', content: match[1] });
      lastIndex = regex.lastIndex;
    }
    if (lastIndex < paragraphText.length) {
      parts.push({ type: 'text', content: paragraphText.substring(lastIndex) });
    }
    return parts;
  };
  
  const currentParagraphParts = useMemo(() => {
    if (currentParagraphIndex < speechParagraphs.length) {
      return parseParagraph(speechParagraphs[currentParagraphIndex]);
    }
    return [];
  }, [currentParagraphIndex, speechParagraphs]);

  const currentParagraphCleanLength = useMemo(() => {
    return currentParagraphParts.reduce((sum, part) => sum + part.content.length, 0);
  }, [currentParagraphParts]);

  useEffect(() => {
    if (!inView || currentParagraphIndex >= speechParagraphs.length || isTypingComplete) return;
    let typingInterval;
    if (displayedChars < currentParagraphCleanLength) {
      typingInterval = setInterval(() => {
        setDisplayedChars(prevChars => {
          if (prevChars < currentParagraphCleanLength) {
            return prevChars + 1;
          }
          clearInterval(typingInterval); 
          setIsTypingComplete(true);
          return prevChars;
        });
      }, 50); 
    } else if (!isTypingComplete) { 
        setIsTypingComplete(true);
    }
    return () => clearInterval(typingInterval);
  }, [inView, currentParagraphIndex, displayedChars, currentParagraphCleanLength, speechParagraphs.length, isTypingComplete]);

  useEffect(() => {
    if (isTypingComplete && currentParagraphIndex < speechParagraphs.length) {
      const nextParagraphTimeout = setTimeout(() => {
        if (currentParagraphIndex < speechParagraphs.length - 1) {
          setCurrentParagraphIndex(prevIndex => prevIndex + 1);
          setDisplayedChars(0); 
          setIsTypingComplete(false); 
        }
      }, 3000); 
      return () => clearTimeout(nextParagraphTimeout);
    }
  }, [isTypingComplete, currentParagraphIndex, speechParagraphs.length]);

  const renderTypedText = () => {
    if (currentParagraphIndex >= speechParagraphs.length) return null;
    let charsLeftToDisplay = displayedChars;
    const elements = [];
    for (let i = 0; i < currentParagraphParts.length; i++) {
      const part = currentParagraphParts[i];
      const partLength = part.content.length;
      if (charsLeftToDisplay <= 0) break; 
      const currentPartText = part.content.substring(0, Math.min(partLength, charsLeftToDisplay));
      if (part.type === 'highlight') {
        elements.push(<QuoteHighlight key={`part-${currentParagraphIndex}-${i}`}>{currentPartText}</QuoteHighlight>);
      } else {
        elements.push(<React.Fragment key={`part-${currentParagraphIndex}-${i}`}>{currentPartText}</React.Fragment>);
      }
      charsLeftToDisplay -= currentPartText.length;
    }
    return elements;
  };

  const DefaultIcon = () => <span>?</span>; 
  const SafeFiQuote = (typeof FiQuote === 'function' || typeof FiQuote === 'object') ? FiQuote : DefaultIcon;
  const SafeFiAward = (typeof FiAward === 'function' || typeof FiAward === 'object') ? FiAward : DefaultIcon;
  const SafeFiUsers = (typeof FiUsers === 'function' || typeof FiUsers === 'object') ? FiUsers : DefaultIcon;
  const SafeFiTrendingUp = (typeof FiTrendingUp === 'function' || typeof FiTrendingUp === 'object') ? FiTrendingUp : DefaultIcon;
  const SafeFiHeart = (typeof FiHeart === 'function' || typeof FiHeart === 'object') ? FiHeart : DefaultIcon;

  const experienceData = [
    { icon: <SafeFiAward />, number: "174", label: "Yıl Tecrübe" },
    { icon: <SafeFiUsers />, number: "4", label: "Kuşak Gelenek" },
    { icon: <SafeFiTrendingUp />, number: "5", label: "Yıldızlı Mutfak" },
    { icon: <SafeFiHeart />, number: "1851", label: "Kuruluş Yılı" }
  ];
  
  return (
    // ThemeProvider ile tüm component'i sarmalıyoruz.
    // `theme` prop'u olarak yukarıda tanımladığımız `theme` sabitini veriyoruz.
    // Bu, içindeki tüm styled component'lerin `props.theme` üzerinden bu temaya erişmesini sağlar.
    <ThemeProvider theme={theme}> {/* DEĞİŞİKLİK BURADA */}
      <SectionContainer ref={ref}> 
        <BackgroundPattern />
        <BackgroundQuote>"</BackgroundQuote>
        
        <ContentContainer>
          <SpeechWrapper
            initial={{ opacity: 0 }}
            animate={inView ? { opacity: 1 } : { opacity: 0 }}
            transition={{ duration: 0.8 }}
          >
            <OwnerSection
              initial={{ opacity: 0, x: -50 }}
              animate={inView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}
              transition={{ duration: 0.8, delay: 0.2 }}
            >
              <OwnerFrame>
                <OwnerImageWrapper>
                  <Image
                    src="/images/huseyin-acikalin.jpg" 
                    alt="Hüseyin Açıkalın"
                    fill
                    sizes="(max-width: 768px) 300px, 350px" 
                    style={{objectFit: "cover"}}
                    priority 
                  />
                </OwnerImageWrapper>
                <OwnerNameCard
                  initial={{ scale: 0.8 }}
                  animate={{ scale: 1 }}
                  transition={{ duration: 0.5, delay: 0.8 }}
                >
                  <OwnerName>Hüseyin Açıkalın</OwnerName>
                  <OwnerTitle>4. Kuşak Temsilcisi</OwnerTitle>
                  <OwnerYears>1985 - Günümüz</OwnerYears>
                </OwnerNameCard>
              </OwnerFrame>
            </OwnerSection>
            
            <SpeechContainer>
              <SpeechHeader>
                <SectionTitle
                  initial={{ opacity: 0, y: 20 }}
                  animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                  transition={{ duration: 0.6, delay: 0.4 }}
                >
                  Geleneğin Devam Ettireni
                </SectionTitle>
                <SectionSubtitle
                  initial={{ opacity: 0, y: 20 }}
                  animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                  transition={{ duration: 0.6, delay: 0.6 }}
                >
                  "Dedelerimizin mirasını yarının nesillere taşıyoruz"
                </SectionSubtitle>
              </SpeechHeader>
              
              <SpeechQuoteContainer
                initial={{ opacity: 0, y: 30 }}
                animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                transition={{ duration: 0.8, delay: 0.8 }}
              >
                <QuoteIcon
                  animate={{ 
                    y: [0, -5, 0],
                    rotate: [0, 5, -5, 0]
                  }}
                  transition={{ 
                    duration: 2,
                    repeat: Infinity,
                    ease: "easeInOut"
                  }}
                >
                  <SafeFiQuote />
                </QuoteIcon>
                
                <QuoteText>
                  {currentParagraphIndex < speechParagraphs.length ? (
                    <>
                      {renderTypedText()}
                      {!isTypingComplete && currentParagraphCleanLength > 0 && displayedChars < currentParagraphCleanLength && (
                         <Cursor
                           animate={{ opacity: [1, 0] }}
                           transition={{ duration: 0.8, repeat: Infinity }}
                         />
                      )}
                    </>
                  ) : ( 
                    <>
                      {speechParagraphs.map((paragraph, index) => (
                        <motion.span
                          key={index}
                          initial={{ opacity: 0 }}
                          animate={{ opacity: 1 }}
                          transition={{ duration: 0.5, delay: index * 0.15 }} 
                        >
                          {parseParagraph(paragraph).map((part, partIndex) => 
                            part.type === 'highlight' ? (
                              <QuoteHighlight key={`${index}-${partIndex}`}>{part.content}</QuoteHighlight>
                            ) : (
                              <React.Fragment key={`${index}-${partIndex}`}>{part.content}</React.Fragment>
                            )
                          )}
                          {index < speechParagraphs.length - 1 && <><br /><br /></>}
                        </motion.span>
                      ))}
                    </>
                  )}
                </QuoteText>
              </SpeechQuoteContainer>
              
              <ExperienceGrid
                initial={{ opacity: 0, y: 20 }}
                animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                transition={{ duration: 0.8, delay: (currentParagraphIndex >= speechParagraphs.length ? 0.5 : 1.4) }} 
              >
                {experienceData.map((item, index) => (
                  <ExperienceCard
                    key={index}
                    initial={{ scale: 0.8, opacity: 0 }}
                    animate={{ scale: 1, opacity: 1 }}
                    transition={{ 
                      duration: 0.5, 
                      delay: (currentParagraphIndex >= speechParagraphs.length ? 0.5 : 1.4) + index * 0.1 
                    }}
                    whileHover={{ scale: 1.05 }}
                  >
                    <ExperienceIcon>{item.icon}</ExperienceIcon>
                    <ExperienceNumber>{item.number}</ExperienceNumber>
                    <ExperienceLabel>{item.label}</ExperienceLabel>
                  </ExperienceCard>
                ))}
              </ExperienceGrid>
            </SpeechContainer>
          </SpeechWrapper>
        </ContentContainer>
      </SectionContainer>
    </ThemeProvider> // DEĞİŞİKLİK BURADA (kapanış etiketi)
  );
};

export default CurrentOwnerSpeech;
=== ./src/app/components/home/FeaturedDishes.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import Image from 'next/image';
import Link from 'next/link';
import { FiClock, FiThermometer, FiDroplet } from 'react-icons/fi';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background-color: ${theme.colors.background.main};
  position: relative;
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const BackgroundPattern = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(circle at 30% 40%, rgba(216, 91, 10, 0.05) 0%, transparent 50%),
    radial-gradient(circle at 70% 60%, rgba(200, 44, 27, 0.05) 0%, transparent 50%);
  z-index: 0;
`;

const SectionHeader = styled.div`
  text-align: center;
  margin-bottom: 3rem;
  position: relative;
  z-index: 1;
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
  position: relative;
  display: inline-block;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
`;

const SectionSubtitle = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.muted};
  max-width: 600px;
  margin: 0 auto;
  margin-top: 2rem;
`;

const DishesGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  position: relative;
  z-index: 1;
  
  ${theme.media.md} {
    grid-template-columns: repeat(2, 1fr);
  }
  
  ${theme.media.lg} {
    grid-template-columns: repeat(4, 1fr);
  }
`;

const DishCard = styled(motion.div)`
  background-color: ${theme.colors.background.main};
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
  position: relative;
  
  &:hover {
    transform: translateY(-8px);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
  }
`;

const DishImageContainer = styled.div`
  position: relative;
  width: 100%;
  height: 250px;
  overflow: hidden;
  
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(180deg, transparent 0%, rgba(0,0,0,0.1) 100%);
    z-index: 1;
  }
`;

const DishBadge = styled.div`
  position: absolute;
  top: 1rem;
  right: 1rem;
  background-color: ${theme.colors.primary.red};
  color: ${theme.colors.text.light};
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  font-size: ${theme.typography.fontSize.sm};
  z-index: 2;
`;

const DishContent = styled.div`
  padding: 1.5rem;
`;

const DishTitle = styled.h3`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize.xl};
  color: ${theme.colors.text.dark};
  margin-bottom: 0.5rem;
`;

const DishDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.muted};
  margin-bottom: 1rem;
  line-height: 1.6;
`;

const DishFeatures = styled.div`
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
  flex-wrap: wrap;
`;

const FeatureItem = styled.div`
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: ${theme.typography.fontSize.sm};
  color: ${theme.colors.text.muted};
  
  svg {
    color: ${theme.colors.primary.orange};
  }
`;

const DishPrice = styled.span`
  font-family: ${theme.typography.fontFamily.accent};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize.xl};
  color: ${theme.colors.primary.red};
`;

const DishOrigin = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.sm};
  color: ${theme.colors.primary.orange};
  font-style: italic;
  margin-top: 0.5rem;
`;

const ViewAllButton = styled(motion.a)`
  display: block;
  width: fit-content;
  margin: 3rem auto 0;
  padding: 0.75rem 2rem;
  background-color: transparent;
  border: 2px solid ${theme.colors.primary.red};
  color: ${theme.colors.primary.red};
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  font-size: ${theme.typography.fontSize.base};
  border-radius: 4px;
  text-decoration: none;
  transition: all 0.3s ease;
  position: relative;
  z-index: 1;
  
  &:hover {
    background-color: ${theme.colors.primary.red};
    color: ${theme.colors.text.light};
  }
`;

// PDF bilgilerine göre güncellenmiş yemek verileri
const featuredDishes = [
  {
    id: 1,
    title: "Isparta Fırın Kebabı",
    description: "Çalı kökü odunuyla 3,5 saat pişirilen, hijyenik koşullarda hazırlanan, %50 fire veren eşsiz lezzet.",
    price: "280 TL",
    image: "/images/isparta-kebabi.jpg",
    badge: "1851'den Beri",
    features: [
      { icon: <FiClock />, text: "3.5 Saat" },
      { icon: <FiThermometer />, text: "Çalı Kökü" },
      { icon: <FiDroplet />, text: "%50 Fire" }
    ],
    origin: "Hafız Dede'nin Özel Tarifi"
  },
  {
    id: 2,
    title: "Kabune Pilavı",
    description: "Dolgun pirinç, kuzu kaburga, nohut ve özel tereyağı ile üzüm asması çırpısında pişirilen geleneksel pilav.",
    price: "120 TL",
    image: "/images/kabune-pilavi.jpg",
    badge: "Geleneksel",
    features: [
      { icon: <FiClock />, text: "15 Dakika" },
      { icon: <FiThermometer />, text: "Saç Ayağı" },
      { icon: <FiDroplet />, text: "Et Suyu" }
    ],
    origin: "Gelin-Kaynana Efsanesi"
  },
  {
    id: 3,
    title: "İrmik Helvası",
    description: "O numara sarı irmik, hakiki tereyağı ve Antep fıstığı ile mangal kömüründe özel kaynatma.",
    price: "85 TL",
    image: "/images/irmik-helvasi.jpg",
    badge: "Özel Tarif",
    features: [
      { icon: <FiClock />, text: "45 Dakika" },
      { icon: <FiThermometer />, text: "Mangal Kömürü" },
      { icon: <FiDroplet />, text: "Antep Fıstığı" }
    ],
    origin: "Bakır Kazan Usulü"
  },
  {
    id: 4,
    title: "Üzüm Şırası",
    description: "Dimlit üzümü, mersin yaprağı, karanfil ve tatlı kabuk ile hazırlanan sağlık deposu.",
    price: "45 TL",
    image: "/images/uzum-sirasi.jpg",
    badge: "Sağlık Deposu",
    features: [
      { icon: <FiClock />, text: "2 Saat" },
      { icon: <FiThermometer />, text: "Kaynatma" },
      { icon: <FiDroplet />, text: "Mersin Yaprağı" }
    ],
    origin: "Beyin Hücresi Yenileyici"
  }
];

const FeaturedDishes = () => {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };
  
  const itemVariants = {
    hidden: { y: 30, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        type: "spring",
        stiffness: 100,
        damping: 15
      }
    }
  };
  
  return (
    <SectionContainer ref={ref}>
      <BackgroundPattern />
      
      <SectionHeader>
        <SectionTitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
        >
          Öne Çıkan Lezzetlerimiz
        </SectionTitle>
        <SectionSubtitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          Nesilden nesile aktarılan gizli tariflerle, Ispartanın en otantik lezzetlerini sunuyoruz.
        </SectionSubtitle>
      </SectionHeader>
      
      <motion.div
        variants={containerVariants}
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
      >
        <DishesGrid>
          {featuredDishes.map((dish) => (
            <DishCard key={dish.id} variants={itemVariants}>
              <DishImageContainer>
                <Image
                  src={dish.image}
                  alt={dish.title}
                  fill
                  style={{objectFit: "cover"}}
                />
                <DishBadge>{dish.badge}</DishBadge>
              </DishImageContainer>
              <DishContent>
                <DishTitle>{dish.title}</DishTitle>
                <DishDescription>{dish.description}</DishDescription>
                <DishFeatures>
                  {dish.features.map((feature, index) => (
                    <FeatureItem key={index}>
                      {feature.icon}
                      <span>{feature.text}</span>
                    </FeatureItem>
                  ))}
                </DishFeatures>
                <DishPrice>{dish.price}</DishPrice>
                <DishOrigin>{dish.origin}</DishOrigin>
              </DishContent>
            </DishCard>
          ))}
        </DishesGrid>
      </motion.div>
      
      <Link href="/menu" passHref>
        <ViewAllButton
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
        >
          Tüm Menüyü Gör
        </ViewAllButton>
      </Link>
    </SectionContainer>
  );
};

export default FeaturedDishes;
=== ./src/app/components/home/Heritage.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import Image from 'next/image';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background-color: ${theme.colors.background.alt};
  position: relative;
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const BackgroundPattern = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(circle at 20% 50%, rgba(200, 44, 27, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(216, 91, 10, 0.1) 0%, transparent 50%);
  z-index: 0;
`;

const SectionHeader = styled.div`
  text-align: center;
  margin-bottom: 5rem;
  position: relative;
  z-index: 1;
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
  position: relative;
  display: inline-block;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize['4xl']};
  }
`;

const SectionSubtitle = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.muted};
  max-width: 700px;
  margin: 2rem auto 0;
  line-height: 1.8;
`;

const GenesisYear = styled(motion.div)`
  font-family: ${theme.typography.fontFamily.accent};
  font-size: ${theme.typography.fontSize['2xl']};
  font-weight: ${theme.typography.fontWeight.bold};
  color: ${theme.colors.primary.red};
  text-align: center;
  margin-bottom: 4rem;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize['3xl']};
  }
`;

const HeritageGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 3rem;
  position: relative;
  z-index: 1;
  
  ${theme.media.md} {
    grid-template-columns: repeat(2, 1fr);
  }
  
  ${theme.media.lg} {
    grid-template-columns: repeat(4, 1fr);
  }
`;

const GenerationCard = styled(motion.div)`
  background-color: ${theme.colors.background.main};
  border-radius: 8px;
  padding: 1.5rem;
  position: relative;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
  }
  
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(90deg, 
      ${theme.colors.primary.red}, 
      ${theme.colors.primary.orange}
    );
    border-radius: 8px 8px 0 0;
  }
`;

const GenerationNumber = styled.div`
  position: absolute;
  top: -15px;
  right: 20px;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: ${theme.colors.primary.red};
  color: ${theme.colors.text.light};
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize.base};
  box-shadow: 0 4px 15px rgba(200, 44, 27, 0.3);
`;

const GenerationImageContainer = styled.div`
  position: relative;
  width: 120px;
  height: 120px;
  border-radius: 50%;
  overflow: hidden;
  margin: 0 auto 1.5rem;
  border: 4px solid ${theme.colors.primary.orange};
  box-shadow: 0 0 0 4px ${theme.colors.secondary.beige};
`;

const GenerationName = styled.h3`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize.xl};
  color: ${theme.colors.text.dark};
  text-align: center;
  margin-bottom: 0.5rem;
`;

const GenerationTitle = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.primary.red};
  text-align: center;
  margin-bottom: 1rem;
  font-weight: ${theme.typography.fontWeight.medium};
`;

const GenerationDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.muted};
  line-height: 1.6;
  text-align: center;
`;

const GenerationYear = styled.div`
  font-family: ${theme.typography.fontFamily.accent};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.primary.orange};
  text-align: center;
  margin-top: 1rem;
  font-weight: ${theme.typography.fontWeight.bold};
`;

// Kuşak verileri
const generations = [
  {
    id: 1,
    name: "Hafız Dede",
    title: "Kurucu Usta",
    generation: "1. Kuşak",
    year: "1851",
    description: "Isparta'da kebap geleneğinin temellerini atan, Hz. Muhammed'in sünnetlerine sadık kalarak işini yapan büyük usta.",
    image: "/images/hafiz-dede.jpg"
  },
  {
    id: 2,
    name: "Siyasi Osman Dede",
    title: "Gelenek Koruyucusu",
    generation: "2. Kuşak",
    year: "1870-1920",
    description: "Hafız Dede'nin yolundan giderek geleneği güçlü ellerde taşıyan ve bu mesleği yaygınlaştıran değerli usta.",
    image: "/images/osman-dede.jpg"
  },
  {
    id: 3,
    name: "Kadir Açıkalın",
    title: "Marka Yaratıcısı",
    generation: "3. Kuşak",
    year: "1920-1985",
    description: "'Kebapçı Kadir' markasını yaratan ve Isparta'nın en tanınmış kebapçısı haline getiren usta.",
    image: "/images/kadir-acikalin.jpg"
  },
  {
    id: 4,
    name: "Hüseyin Açıkalın",
    title: "Modern Temsilci",
    generation: "4. Kuşak",
    year: "1985-Günümüz",
    description: "Geleneği modern çağa taşıyan, beş yıldızlı mutfak anlayışı ile kaliteyi zirveye çıkaran günümüz ustası.",
    image: "/images/huseyin-acikalin.jpg"
  }
];

const Heritage = () => {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };
  
  const itemVariants = {
    hidden: { y: 50, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        type: "spring",
        stiffness: 100,
        damping: 15
      }
    }
  };
  
  return (
    <SectionContainer ref={ref}>
      <BackgroundPattern />
      
      <SectionHeader>
        <SectionTitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
        >
          Kuşaktan Kuşağa Gelen Gelenek
        </SectionTitle>
        <SectionSubtitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          Isparta kebap geleneğinin köklü tarihçesi, dört kuşakta yazılan eşsiz lezzet hikayesi.
        </SectionSubtitle>
      </SectionHeader>
      
      <GenesisYear
        initial={{ opacity: 0, scale: 0.5 }}
        animate={inView ? { opacity: 1, scale: 1 } : { opacity: 0, scale: 0.5 }}
        transition={{ duration: 0.8, delay: 0.4 }}
      >
        1851den Günümüze...
      </GenesisYear>
      
      <motion.div
        variants={containerVariants}
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
      >
        <HeritageGrid>
          {generations.map((generation, index) => (
            <GenerationCard key={generation.id} variants={itemVariants}>
              <GenerationNumber>
                {index + 1}
              </GenerationNumber>
              <GenerationImageContainer>
                <Image
                  src={generation.image}
                  alt={generation.name}
                  fill
                  style={{objectFit: "cover"}}
                />
              </GenerationImageContainer>
              <GenerationName>{generation.name}</GenerationName>
              <GenerationTitle>
                {generation.title} • {generation.generation}
              </GenerationTitle>
              <GenerationDescription>
                {generation.description}
              </GenerationDescription>
              <GenerationYear>{generation.year}</GenerationYear>
            </GenerationCard>
          ))}
        </HeritageGrid>
      </motion.div>
    </SectionContainer>
  );
};

export default Heritage;
=== ./src/app/components/home/Hero.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { theme } from '../../styles/theme';
import Link from 'next/link';
import Image from 'next/image';

const HeroContainer = styled.section`
  position: relative;
  height: 100vh;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
`;

const VideoBackground = styled.video`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: -1;
`;

const ImageBackground = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('/images/hero-background.jpg');
  background-size: cover;
  background-position: center;
  z-index: -1;
  
  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      rgba(0, 0, 0, 0.5),
      rgba(0, 0, 0, 0.3),
      rgba(0, 0, 0, 0.5)
    );
  }
`;

const ContentWrapper = styled.div`
  text-align: center;
  color: ${theme.colors.text.light};
  z-index: 1;
  padding: 0 1rem;
  max-width: 900px;
`;

const HeroTitle = styled(motion.h1)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  margin-bottom: 1rem;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize['4xl']};
  }
  
  ${theme.media.lg} {
    font-size: ${theme.typography.fontSize['5xl']};
  }
`;

const HeroSubtitle = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.accent};
  font-size: ${theme.typography.fontSize.lg};
  margin-bottom: 1rem;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize.xl};
  }
`;

const HeroYear = styled(motion.div)`
  font-family: ${theme.typography.fontFamily.accent};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.primary.yellow};
  font-weight: ${theme.typography.fontWeight.bold};
  margin-bottom: 0.5rem;
  letter-spacing: 2px;
`;

const HeroDescription = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  margin-bottom: 2rem;
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
  opacity: 0.9;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize.lg};
  }
`;

const HeroButtons = styled(motion.div)`
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-top: 2rem;
  
  ${theme.media.sm} {
    flex-direction: row;
    justify-content: center;
  }
`;

const PrimaryButton = styled(motion.a)`
  display: inline-block;
  background-color: ${theme.colors.primary.red};
  color: ${theme.colors.text.light};
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  padding: 1rem 2rem;
  border-radius: 4px;
  text-decoration: none;
  transition: all 0.3s ease;
  border: 2px solid ${theme.colors.primary.red};
  
  &:hover {
    background-color: transparent;
    color: ${theme.colors.text.light};
  }
`;

const SecondaryButton = styled(motion.a)`
  display: inline-block;
  background-color: transparent;
  color: ${theme.colors.text.light};
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  padding: 1rem 2rem;
  border-radius: 4px;
  text-decoration: none;
  transition: all 0.3s ease;
  border: 2px solid ${theme.colors.text.light};
  
  &:hover {
    background-color: ${theme.colors.text.light};
    color: ${theme.colors.text.dark};
  }
`;

const scrollDownAnimation = {
  y: [0, 10, 0],
  transition: {
    y: {
      repeat: Infinity,
      duration: 1.5,
      ease: "easeInOut"
    }
  }
};

const ScrollIndicator = styled(motion.div)`
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  color: ${theme.colors.text.light};
  display: flex;
  flex-direction: column;
  align-items: center;
  cursor: pointer;
`;

const ScrollText = styled.span`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.sm};
  margin-bottom: 0.5rem;
`;

const ScrollIcon = styled(motion.div)`
  width: 30px;
  height: 50px;
  border: 2px solid ${theme.colors.text.light};
  border-radius: 15px;
  position: relative;
  
  &:after {
    content: '';
    position: absolute;
    top: 8px;
    left: 50%;
    transform: translateX(-50%);
    width: 6px;
    height: 6px;
    background-color: ${theme.colors.text.light};
    border-radius: 50%;
  }
`;

const Hero = () => {
  const scrollToContent = () => {
    window.scrollTo({
      top: window.innerHeight,
      behavior: 'smooth'
    });
  };
  
  return (
    <HeroContainer>
      {/* Görsel arka plan */}
      <ImageBackground />
      
      <ContentWrapper>
        <HeroYear
          initial={{ opacity: 0, scale: 0.5 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.8, delay: 0.1 }}
        >
          1851
        </HeroYear>
        
        <HeroTitle
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.3 }}
        >
          Ateşin ve Lezzetin Buluştuğu Yer
        </HeroTitle>
        
        <HeroSubtitle
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.5 }}
        >
          İki Asır Süren Lezzet Geleneği
        </HeroSubtitle>
        
        <HeroDescription
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.7 }}
        >
          Hafız Dedenin 1851de başlattığı bu mübarek yolculuk, Ispartanın en köklü kebapçısında bugün de devam ediyor. Kuşaktan kuşağa aktarılan gizli tarifler ve el sanatı ustalığıyla...
        </HeroDescription>
        
        <HeroButtons
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.9 }}
        >
          <Link href="/menu" passHref>
            <PrimaryButton
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              Menümüzü Keşfedin
            </PrimaryButton>
          </Link>
          
          <Link href="/contact" passHref>
            <SecondaryButton
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              Rezervasyon Yap
            </SecondaryButton>
          </Link>
        </HeroButtons>
      </ContentWrapper>
      
      <ScrollIndicator onClick={scrollToContent}>
        <ScrollText>Keşfet</ScrollText>
        <ScrollIcon animate={scrollDownAnimation} />
      </ScrollIndicator>
    </HeroContainer>
  );
};

export default Hero;
=== ./src/app/components/home/KabunePilafStory.js ===
"use client"

import React, { useState } from 'react';
import styled from 'styled-components';
import { motion, AnimatePresence } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import { FiPlay, FiPause, FiArrowLeft, FiArrowRight } from 'react-icons/fi';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background: linear-gradient(135deg, 
    ${theme.colors.secondary.offwhite} 0%, 
    ${theme.colors.background.alt} 50%,
    ${theme.colors.secondary.offwhite} 100%
  );
  position: relative;
  overflow: hidden;
  
  ${theme.media.md} {
    padding: 8rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 10rem 4rem;
  }
`;

const SectionHeader = styled.div`
  text-align: center;
  margin-bottom: 4rem;
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
  position: relative;
  display: inline-block;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize['4xl']};
  }
`;

const SectionSubtitle = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.muted};
  max-width: 800px;
  margin: 2rem auto 0;
  line-height: 1.8;
`;

const StoryContainer = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
`;

const StoryViewer = styled.div`
  background-color: ${theme.colors.background.main};
  border-radius: 16px;
  padding: 2rem;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
  position: relative;
`;

const StoryContent = styled(motion.div)`
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  min-height: 400px;
  
  ${theme.media.lg} {
    grid-template-columns: 1fr 1fr;
    align-items: center;
  }
`;

const StoryImage = styled(motion.div)`
  position: relative;
  height: 300px;
  border-radius: 12px;
  overflow: hidden;
  background: linear-gradient(45deg, 
    ${theme.colors.primary.yellow}20, 
    ${theme.colors.primary.orange}20
  );
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 6rem;
  
  ${theme.media.md} {
    height: 400px;
    font-size: 8rem;
  }
`;

const FloatingElement = styled(motion.div)`
  position: absolute;
  font-size: 2rem;
  
  ${theme.media.md} {
    font-size: 3rem;
  }
`;

const StoryText = styled.div`
  padding: 1rem;
`;

const StoryParagraph = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.dark};
  line-height: 1.8;
  margin-bottom: 1.5rem;
`;

const WordTransition = styled(motion.span)`
  display: inline-block;
  color: ${theme.colors.primary.red};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize.xl};
  border: 2px dashed ${theme.colors.primary.red};
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  margin: 0 0.5rem;
  background-color: ${theme.colors.primary.yellow}20;
`;

const StoryControls = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin-top: 2rem;
`;

const ControlButton = styled(motion.button)`
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: none;
  background-color: ${theme.colors.primary.red};
  color: ${theme.colors.text.light};
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: 1.25rem;
  transition: all 0.3s ease;
  
  &:hover {
    background-color: ${theme.colors.primary.orange};
    transform: scale(1.1);
  }
  
  &:disabled {
    background-color: ${theme.colors.secondary.beige};
    cursor: not-allowed;
    transform: none;
  }
`;

const StepIndicator = styled.div`
  display: flex;
  gap: 0.5rem;
  margin: 0 1rem;
`;

const StepDot = styled.div`
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: ${props => props.active ? theme.colors.primary.red : theme.colors.secondary.beige};
  transition: all 0.3s ease;
`;

// Kabune pilavı hikayesi adımları
const storySteps = [
  {
    id: 1,
    text: "Yüzyıllar öncesi küçük Isparta şehrinde gelin ile kaynana gezmeye giderler, akşam saati olup eve geç kalınır.",
    emoji: "🏠",
    floatingElements: [
      { emoji: "🌅", x: 20, y: 20 },
      { emoji: "👰", x: 80, y: 60 }
    ]
  },
  {
    id: 2,
    text: "Eve geç kalınca hazırda bir yemek yoktur. Kaynana telaşlanır: 'Gelin ne yapacağız?' diye sorar.",
    emoji: "😰",
    floatingElements: [
      { emoji: "⏰", x: 30, y: 30 },
      { emoji: "🤷‍♀️", x: 70, y: 50 }
    ]
  },
  {
    id: 3,
    text: "Gelin 'Merak etme ana, hemen hallederim' der. Mutfakta tel dolabın içerisinde bir gün öncesinden kalan haşlanmış etli nohut yemeği vardır.",
    emoji: "💡",
    floatingElements: [
      { emoji: "🥘", x: 25, y: 40 },
      { emoji: "💪", x: 75, y: 25 }
    ]
  },
  {
    id: 4,
    text: "Hemen soğan doğrayıp bir kazana koyar, üzerine et ve nohutu ilave eder. Pirinç ve et suyunu da ilave eder.",
    emoji: "👩‍🍳",
    floatingElements: [
      { emoji: "🧅", x: 20, y: 35 },
      { emoji: "🍚", x: 60, y: 55 },
      { emoji: "🥩", x: 80, y: 25 }
    ]
  },
  {
    id: 5,
    text: "Saç ayağında üzüm asmasının çırpısı ile 5 dakikada pişirerek kapağı ile birlikte yemek tablası olarak kullanılan zinini üzerine bakır kazanı koyar.",
    emoji: "🔥",
    floatingElements: [
      { emoji: "🍇", x: 30, y: 20 },
      { emoji: "⚡", x: 70, y: 40 },
      { emoji: "🥄", x: 50, y: 70 }
    ]
  },
  {
    id: 6,
    text: "Akşam yemeğinde kaynana ve kaynata sulu yemek beklemektedir. Kapağı ilk açan kaynana gördüğü pirinç pilavının şaşkınlığı ile",
    emoji: "😲",
    floatingElements: [
      { emoji: "🍽️", x: 25, y: 30 },
      { emoji: "❓", x: 75, y: 45 }
    ]
  },
  {
    id: 7,
    text: "",
    emoji: "",
    showWordTransition: true,
    fromWord: "GIBUNE",
    toWord: "KABUNE",
    transitionText: "der ve bu pilav o günden bugüne çabuk pişmesi ve doyurucu bir yemek olması ile günümüze kadar düğünlerde, mevlütlerde ve toplu yemeklerde verilmeye başlar.",
    floatingElements: [
      { emoji: "💫", x: 30, y: 30 },
      { emoji: "✨", x: 70, y: 50 }
    ]
  }
];

const KabunePilafStory = () => {
  const [currentStep, setCurrentStep] = useState(0);
  const [isPlaying, setIsPlaying] = useState(false);
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  React.useEffect(() => {
    let interval;
    if (isPlaying && inView) {
      interval = setInterval(() => {
        setCurrentStep((prev) => {
          if (prev >= storySteps.length - 1) {
            setIsPlaying(false);
            return prev;
          }
          return prev + 1;
        });
      }, 4000);
    }
    return () => clearInterval(interval);
  }, [isPlaying, inView]);
  
  const handlePrevious = () => {
    setCurrentStep((prev) => Math.max(0, prev - 1));
  };
  
  const handleNext = () => {
    setCurrentStep((prev) => Math.min(storySteps.length - 1, prev + 1));
  };
  
  const togglePlay = () => {
    setIsPlaying(!isPlaying);
  };
  
  const currentStepData = storySteps[currentStep];
  
  return (
    <SectionContainer ref={ref}>
      <SectionHeader>
        <SectionTitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
        >
          Kabune Pilavının Efsanesi
        </SectionTitle>
        <SectionSubtitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          Gelin bu NE? sorusundan doğan efsanevi pilavın hikayesini, 
          interaktif anlatımla keşfedin.
        </SectionSubtitle>
      </SectionHeader>
      
      <StoryContainer>
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
          transition={{ duration: 0.8, delay: 0.4 }}
        >
          <StoryViewer>
            <AnimatePresence mode="wait">
              <StoryContent
                key={currentStep}
                initial={{ opacity: 0, x: 50 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -50 }}
                transition={{ duration: 0.5 }}
              >
                <StoryImage>
                  <motion.div
                    initial={{ scale: 0.5 }}
                    animate={{ scale: 1 }}
                    transition={{ duration: 0.5, delay: 0.2 }}
                  >
                    {currentStepData.showWordTransition ? (
                      <motion.div
                        initial={{ scale: 0.5 }}
                        animate={{ scale: 1 }}
                        transition={{ duration: 0.8 }}
                      >
                        <motion.span
                          initial={{ x: -100 }}
                          animate={{ x: 0 }}
                          transition={{ duration: 0.6 }}
                          style={{ fontSize: '4rem', marginRight: '2rem' }}
                        >
                          {currentStepData.fromWord}
                        </motion.span>
                        <motion.span
                          initial={{ scale: 0 }}
                          animate={{ scale: 1 }}
                          transition={{ duration: 0.5, delay: 0.3 }}
                          style={{ fontSize: '3rem', color: theme.colors.primary.red }}
                        >
                          →
                        </motion.span>
                        <motion.span
                          initial={{ x: 100 }}
                          animate={{ x: 0 }}
                          transition={{ duration: 0.6, delay: 0.6 }}
                          style={{ fontSize: '4rem', marginLeft: '2rem' }}
                        >
                          {currentStepData.toWord}
                        </motion.span>
                      </motion.div>
                    ) : (
                      currentStepData.emoji
                    )}
                  </motion.div>
                  
                  {currentStepData.floatingElements?.map((element, index) => (
                    <FloatingElement
                      key={index}
                      style={{ 
                        left: `${element.x}%`, 
                        top: `${element.y}%` 
                      }}
                      animate={{ 
                        y: [0, -10, 0],
                        rotate: [0, 5, -5, 0]
                      }}
                      transition={{ 
                        duration: 2,
                        delay: index * 0.2,
                        repeat: Infinity 
                      }}
                    >
                      {element.emoji}
                    </FloatingElement>
                  ))}
                </StoryImage>
                
                <StoryText>
                  {currentStepData.showWordTransition ? (
                    <StoryParagraph>
                      <strong>Gelin Bu NE?</strong>
                      <WordTransition
                        initial={{ scale: 0 }}
                        animate={{ scale: 1 }}
                        transition={{ duration: 0.5 }}
                      >
                        {currentStepData.fromWord}
                      </WordTransition>
                      {currentStepData.transitionText}
                      <br /><br />
                      İsmide Gelin Bu NE anlamına gelen GIBUNE pilavı günümüze kadar
                      <WordTransition
                        initial={{ scale: 0 }}
                        animate={{ scale: 1 }}
                        transition={{ duration: 0.5, delay: 0.3 }}
                      >
                        {currentStepData.toWord}
                      </WordTransition>
                      Pilavı olarak ismi değişerek bugünlere gelmiştir.
                    </StoryParagraph>
                  ) : (
                    <StoryParagraph>{currentStepData.text}</StoryParagraph>
                  )}
                </StoryText>
              </StoryContent>
            </AnimatePresence>
            
            <StoryControls>
              <ControlButton
                onClick={handlePrevious}
                disabled={currentStep === 0}
                whileHover={{ scale: 1.1 }}
                whileTap={{ scale: 0.95 }}
              >
                <FiArrowLeft />
              </ControlButton>
              
              <ControlButton
                onClick={togglePlay}
                whileHover={{ scale: 1.1 }}
                whileTap={{ scale: 0.95 }}
              >
                {isPlaying ? <FiPause /> : <FiPlay />}
              </ControlButton>
              
              <ControlButton
                onClick={handleNext}
                disabled={currentStep === storySteps.length - 1}
                whileHover={{ scale: 1.1 }}
                whileTap={{ scale: 0.95 }}
              >
                <FiArrowRight />
              </ControlButton>
              
              <StepIndicator>
                {storySteps.map((_, index) => (
                  <StepDot key={index} active={currentStep === index} />
                ))}
              </StepIndicator>
            </StoryControls>
          </StoryViewer>
        </motion.div>
      </StoryContainer>
    </SectionContainer>
  );
};

export default KabunePilafStory;
=== ./src/app/components/home/LegacyIntro.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import { FiClock, FiHeart, FiUsers, FiTrendingUp } from 'react-icons/fi';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background: linear-gradient(135deg, 
    ${theme.colors.background.main} 0%, 
    ${theme.colors.secondary.offwhite} 50%,
    ${theme.colors.background.main} 100%
  );
  position: relative;
  overflow: hidden;
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const BackgroundElements = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
`;

const FloatingElement = styled(motion.div)`
  position: absolute;
  color: ${theme.colors.primary.red};
  opacity: 0.03;
  font-size: ${props => props.size || '8rem'};
  font-family: ${theme.typography.fontFamily.accent};
  
  &:nth-child(1) {
    top: 10%;
    left: 10%;
    font-size: 10rem;
  }
  
  &:nth-child(2) {
    top: 20%;
    right: 15%;
    font-size: 6rem;
  }
  
  &:nth-child(3) {
    bottom: 15%;
    left: 20%;
    font-size: 8rem;
  }
  
  &:nth-child(4) {
    bottom: 25%;
    right: 10%;
    font-size: 5rem;
  }
`;

const ContentContainer = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
  z-index: 1;
`;

const YearHighlight = styled(motion.div)`
  text-align: center;
  margin-bottom: 3rem;
`;

const YearNumber = styled.div`
  font-family: ${theme.typography.fontFamily.accent};
  font-size: ${theme.typography.fontSize['5xl']};
  font-weight: ${theme.typography.fontWeight.bold};
  background: linear-gradient(45deg, 
    ${theme.colors.primary.red}, 
    ${theme.colors.primary.orange}
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  line-height: 1;
  
  ${theme.media.md} {
    font-size: 8rem;
  }
`;

const YearFromTo = styled.div`
  font-family: ${theme.typography.fontFamily.heading};
  font-size: ${theme.typography.fontSize.xl};
  color: ${theme.colors.text.muted};
  margin-top: 0.5rem;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize['2xl']};
  }
`;

const MainContent = styled.div`
  text-align: center;
  margin-bottom: 4rem;
`;

const MainTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1.5rem;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize['4xl']};
  }
`;

const MainDescription = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.dark};
  line-height: 1.8;
  max-width: 800px;
  margin: 0 auto;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize.xl};
  }
`;

const StatsGrid = styled(motion.div)`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 2rem;
  margin-top: 3rem;
`;

const StatCard = styled(motion.div)`
  background-color: ${theme.colors.background.main};
  padding: 2rem;
  border-radius: 12px;
  text-align: center;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  border: 2px solid transparent;
  transition: all 0.3s ease;
  
  &:hover {
    border-color: ${theme.colors.primary.orange};
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
  }
`;

const StatIcon = styled.div`
  font-size: 2.5rem;
  color: ${theme.colors.primary.red};
  margin-bottom: 1rem;
`;

const StatNumber = styled.div`
  font-family: ${theme.typography.fontFamily.accent};
  font-size: ${theme.typography.fontSize['2xl']};
  font-weight: ${theme.typography.fontWeight.bold};
  color: ${theme.colors.text.dark};
  margin-bottom: 0.5rem;
`;

const StatLabel = styled.div`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.muted};
  font-weight: ${theme.typography.fontWeight.medium};
`;

const stats = [
  {
    icon: <FiClock />,
    number: "174",
    label: "Yıl"
  },
  {
    icon: <FiUsers />,
    number: "4",
    label: "Kuşak"
  },
  {
    icon: <FiHeart />,
    number: "1",
    label: "Tutku"
  },
  {
    icon: <FiTrendingUp />,
    number: "∞",
    label: "Lezzet"
  }
];

const LegacyIntro = () => {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };
  
  const itemVariants = {
    hidden: { y: 30, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        type: "spring",
        stiffness: 100,
        damping: 15
      }
    }
  };
  
  return (
    <SectionContainer ref={ref}>
      <BackgroundElements>
        <FloatingElement
          animate={{
            y: [0, -20, 0],
            rotate: [0, 5, 0]
          }}
          transition={{
            duration: 6,
            repeat: Infinity,
            ease: "easeInOut"
          }}
        >
          1851
        </FloatingElement>
        <FloatingElement
          animate={{
            y: [0, 15, 0],
            rotate: [0, -3, 0]
          }}
          transition={{
            duration: 8,
            repeat: Infinity,
            ease: "easeInOut",
            delay: 1
          }}
        >
          🍖
        </FloatingElement>
        <FloatingElement
          animate={{
            y: [0, -10, 0],
            rotate: [0, 2, 0]
          }}
          transition={{
            duration: 7,
            repeat: Infinity,
            ease: "easeInOut",
            delay: 2
          }}
        >
          🔥
        </FloatingElement>
        <FloatingElement
          animate={{
            y: [0, 12, 0],
            rotate: [0, -4, 0]
          }}
          transition={{
            duration: 5,
            repeat: Infinity,
            ease: "easeInOut",
            delay: 3
          }}
        >
          2025
        </FloatingElement>
      </BackgroundElements>
      
      <ContentContainer>
        <YearHighlight
          initial={{ opacity: 0, scale: 0.5 }}
          animate={inView ? { opacity: 1, scale: 1 } : { opacity: 0, scale: 0.5 }}
          transition={{ duration: 0.8 }}
        >
          <YearNumber>174</YearNumber>
          <YearFromTo>YIL (1851 - 2025)</YearFromTo>
        </YearHighlight>
        
        <MainContent>
          <MainTitle
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.2 }}
          >
            Yaklaşık İki Asırlık Lezzet Serüveni
          </MainTitle>
          
          <MainDescription
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.4 }}
          >
            Hafız Dedenin 1851de başlattığı bu mübarek yolculuk, bugün 174 yılını geride bırakarak 
            Ispartanın en köklü kebap geleneğini temsil ediyor. Dört kuşaktır aktarılan gizli tarifler, 
            zahmetli ustalık ve hiç değişmeyen lezzet sevgisiyle... Yaklaşık iki asırdır aynı ateşle 
            yanıyoruz, aynı tutku ile pişiriyoruz.
          </MainDescription>
        </MainContent>
        
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate={inView ? "visible" : "hidden"}
        >
          <StatsGrid>
            {stats.map((stat, index) => (
              <StatCard
                key={index}
                variants={itemVariants}
                whileHover={{ scale: 1.05 }}
              >
                <StatIcon>{stat.icon}</StatIcon>
                <StatNumber>{stat.number}</StatNumber>
                <StatLabel>{stat.label}</StatLabel>
              </StatCard>
            ))}
          </StatsGrid>
        </motion.div>
      </ContentContainer>
    </SectionContainer>
  );
};

export default LegacyIntro;
=== ./src/app/components/home/OvenKebabStory.js ===
"use client"

import React, { useState, useEffect } from 'react';
import styled from 'styled-components';
import { motion, AnimatePresence } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import { FiClock, FiThermometer, FiDroplet } from 'react-icons/fi';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background: linear-gradient(180deg, 
    ${theme.colors.background.main} 0%, 
    ${theme.colors.secondary.offwhite} 100%
  );
  position: relative;
  overflow: hidden;
  
  ${theme.media.md} {
    padding: 8rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 10rem 4rem;
  }
`;

const SectionHeader = styled.div`
  text-align: center;
  margin-bottom: 5rem;
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
  position: relative;
  display: inline-block;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize['4xl']};
  }
`;

const SectionSubtitle = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.muted};
  max-width: 800px;
  margin: 2rem auto 0;
  line-height: 1.8;
`;

const StoryContainer = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
`;

const StepsContainer = styled.div`
  position: relative;
  padding: 2rem 0;
`;

const StepIndicator = styled.div`
  display: flex;
  justify-content: space-between;
  margin-bottom: 3rem;
  position: relative;
  
  &:before {
    content: '';
    position: absolute;
    top: 20px;
    left: 50px;
    right: 50px;
    height: 2px;
    background-color: ${theme.colors.secondary.beige};
    z-index: 0;
  }
`;

const StepButton = styled(motion.button)`
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: none;
  background-color: ${props => props.active ? theme.colors.primary.red : theme.colors.secondary.beige};
  color: ${props => props.active ? theme.colors.text.light : theme.colors.text.dark};
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  cursor: pointer;
  z-index: 1;
  position: relative;
  transition: all 0.3s ease;
  
  &:hover {
    transform: scale(1.1);
  }
`;

const StepContent = styled(motion.div)`
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  min-height: 300px;
  
  ${theme.media.lg} {
    grid-template-columns: 1fr 1fr;
    align-items: center;
  }
`;

const StepImage = styled(motion.div)`
  position: relative;
  height: 300px;
  border-radius: 12px;
  overflow: hidden;
  background-color: ${theme.colors.secondary.beige};
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 4rem;
  
  ${theme.media.md} {
    height: 400px;
  }
`;

const StepInfo = styled.div`
  padding: 1rem;
`;

const StepTitle = styled.h3`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize['2xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
`;

const StepDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.dark};
  line-height: 1.8;
  margin-bottom: 1.5rem;
`;

const StepDetails = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 1rem;
`;

const DetailCard = styled.div`
  background-color: ${theme.colors.background.alt};
  padding: 1rem;
  border-radius: 8px;
  text-align: center;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
`;

const DetailIcon = styled.div`
  color: ${theme.colors.primary.red};
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
`;

const DetailTitle = styled.h4`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.dark};
  margin-bottom: 0.5rem;
`;

const DetailValue = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.muted};
`;

const FireAnimation = styled(motion.div)`
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: ${theme.colors.primary.orange};
  font-size: 6rem;
  z-index: 2;
`;

// Fırın kebabı yapım aşamaları
const kebabSteps = [
  {
    id: 1,
    title: "Seçilmiş Etlerimiz",
    description: "Doğal ortamlarda yetişen hayvanlardan, hijyenik koşullarda ayrıştırılan en kaliteli etler. Böbrek yağları ve kan damarları özenle temizlenir.",
    icon: "🥩",
    details: [
      { title: "Et Kalitesi", value: "100% Doğal", icon: <FiDroplet /> },
      { title: "Kolesterol", value: "Yok denecek", icon: <FiThermometer /> }
    ]
  },
  {
    id: 2,
    title: "Fırın Hazırlığı",
    description: "Fırın önceden yakılır ve ısıtılır. Çiğ etler şişe takılarak duvara dik olarak sıralanır, pişirmeye hazır hale getirilir.",
    icon: "🔥",
    details: [
      { title: "Hazırlık", value: "Özel Sıralama", icon: <FiThermometer /> },
      { title: "Yakıt", value: "Çalı Kökü Odunu", icon: <FiClock /> }
    ]
  },
  {
    id: 3,
    title: "Pişirme Süreci",
    description: "3-3.5 saat aralığında çalı kökü odunuyla pişirilir. 2 saat alev, 1 saat korda (köz) üzerinde özel teknikle hazırlanır.",
    icon: "⏰",
    details: [
      { title: "Süre", value: "3-3.5 Saat", icon: <FiClock /> },
      { title: "Alev", value: "2 Saat", icon: <FiThermometer /> },
      { title: "Köz", value: "1 Saat", icon: <FiDroplet /> }
    ]
  },
  {
    id: 4,
    title: "Buharlaştırma",
    description: "Bakır sahanlardaki su ile buharlaştırılarak hem buhar, hem alev arasında %50 fire vererek mükemmel lezzeti yakalar.",
    icon: "💨",
    details: [
      { title: "Fire Oranı", value: "%50", icon: <FiDroplet /> },
      { title: "Araç", value: "Bakır Sahan", icon: <FiThermometer /> }
    ]
  },
  {
    id: 5,
    title: "Servis",
    description: "Fırından çıkan nar gibi kuzu eti, kendine özgü bakır tabaklarda lavaş ekmeği üzerine servis edilir.",
    icon: "🍽️",
    details: [
      { title: "Servis", value: "Lavaş Ekmek", icon: <FiDroplet /> },
      { title: "Tabak", value: "Bakır Özel", icon: <FiThermometer /> }
    ]
  }
];

const OvenKebabStory = () => {
  const [currentStep, setCurrentStep] = useState(0);
  const [autoPlay, setAutoPlay] = useState(true);
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  useEffect(() => {
    if (autoPlay && inView) {
      const interval = setInterval(() => {
        setCurrentStep((prev) => (prev + 1) % kebabSteps.length);
      }, 5000);
      
      return () => clearInterval(interval);
    }
  }, [autoPlay, inView]);
  
  const handleStepChange = (stepIndex) => {
    setCurrentStep(stepIndex);
    setAutoPlay(false);
  };
  
  return (
    <SectionContainer ref={ref}>
      <SectionHeader>
        <SectionTitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
        >
          Fırın Kebabının Sırrı
        </SectionTitle>
        <SectionSubtitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          Yüzyıllar süren tecrübe ile mükemmelleşen, her aşaması özenle yapılan 
          Isparta fırın kebabının benzersiz hazırlanış hikayesi.
        </SectionSubtitle>
      </SectionHeader>
      
      <StoryContainer>
        <StepsContainer>
          <motion.div
            initial={{ opacity: 0 }}
            animate={inView ? { opacity: 1 } : { opacity: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
          >
            <StepIndicator>
              {kebabSteps.map((step, index) => (
                <StepButton
                  key={step.id}
                  active={currentStep === index}
                  onClick={() => handleStepChange(index)}
                  whileHover={{ scale: 1.1 }}
                  whileTap={{ scale: 0.95 }}
                >
                  {index + 1}
                </StepButton>
              ))}
            </StepIndicator>
          </motion.div>
          
          <AnimatePresence mode="wait">
            <StepContent
              key={currentStep}
              initial={{ opacity: 0, x: 50 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -50 }}
              transition={{ duration: 0.5 }}
            >
              <StepImage>
                <motion.div
                  initial={{ scale: 0.5 }}
                  animate={{ scale: 1 }}
                  transition={{ duration: 0.5, delay: 0.2 }}
                >
                  {kebabSteps[currentStep].icon}
                </motion.div>
                {currentStep === 1 && (
                  <FireAnimation
                    animate={{
                      scale: [1, 1.1, 1],
                      rotate: [0, 5, -5, 0],
                    }}
                    transition={{
                      duration: 2,
                      repeat: Infinity,
                      ease: "easeInOut"
                    }}
                  >
                    🔥
                  </FireAnimation>
                )}
              </StepImage>
              
              <StepInfo>
                <StepTitle>{kebabSteps[currentStep].title}</StepTitle>
                <StepDescription>{kebabSteps[currentStep].description}</StepDescription>
                <StepDetails>
                  {kebabSteps[currentStep].details.map((detail, index) => (
                    <DetailCard key={index}>
                      <DetailIcon>{detail.icon}</DetailIcon>
                      <DetailTitle>{detail.title}</DetailTitle>
                      <DetailValue>{detail.value}</DetailValue>
                    </DetailCard>
                  ))}
                </StepDetails>
              </StepInfo>
            </StepContent>
          </AnimatePresence>
        </StepsContainer>
      </StoryContainer>
    </SectionContainer>
  );
};

export default OvenKebabStory;
=== ./src/app/components/home/ReservationCTA.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import Link from 'next/link';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background-image: url('/images/reservation-bg.jpg');
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
  position: relative;
  
  ${theme.media.md} {
    padding: 8rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 10rem 4rem;
  }
  
  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.6);
  }
`;

const ContentContainer = styled.div`
  position: relative;
  z-index: 1;
  text-align: center;
  max-width: 800px;
  margin: 0 auto;
  color: ${theme.colors.text.light};
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  margin-bottom: 1.5rem;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize['4xl']};
  }
`;

const Paragraph = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  margin-bottom: 2.5rem;
  line-height: 1.8;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize.xl};
  }
`;

const ButtonsContainer = styled(motion.div)`
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  justify-content: center;
  
  ${theme.media.sm} {
    flex-direction: row;
  }
`;

const PrimaryButton = styled(motion.a)`
  display: inline-block;
  background-color: ${theme.colors.primary.red};
  color: ${theme.colors.text.light};
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  padding: 1rem 2.5rem;
  border-radius: 4px;
  text-decoration: none;
  transition: all 0.3s ease;
  border: 2px solid ${theme.colors.primary.red};
  min-width: 200px;
  text-align: center;
  
  &:hover {
    background-color: transparent;
    color: ${theme.colors.text.light};
  }
`;

const SecondaryButton = styled(motion.a)`
  display: inline-block;
  background-color: transparent;
  color: ${theme.colors.text.light};
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  padding: 1rem 2.5rem;
  border-radius: 4px;
  text-decoration: none;
  transition: all 0.3s ease;
  border: 2px solid ${theme.colors.text.light};
  min-width: 200px;
  text-align: center;
  
  &:hover {
    background-color: ${theme.colors.text.light};
    color: ${theme.colors.text.dark};
  }
`;

const ReservationCTA = () => {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  return (
    <SectionContainer ref={ref}>
      <ContentContainer>
        <SectionTitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
        >
          Özel Anlarınızı Bizimle Paylaşın
        </SectionTitle>
        
        <Paragraph
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          Aileniz, sevdikleriniz veya iş arkadaşlarınızla geçireceğiniz özel anlar için masanızı şimdiden ayırtın. Sizin için her şeyi düşündük, tek yapmanız gereken rezervasyon yapmak.
        </Paragraph>
        
        <ButtonsContainer
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.4 }}
        >
          <Link href="/contact" passHref>
            <PrimaryButton
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              Rezervasyon Yap
            </PrimaryButton>
          </Link>
          
          <Link href="/menu" passHref>
            <SecondaryButton
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              Menüyü İncele
            </SecondaryButton>
          </Link>
        </ButtonsContainer>
      </ContentContainer>
    </SectionContainer>
  );
};

export default ReservationCTA;
=== ./src/app/components/home/StoryPreview.js ===
"use client"

import React from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import Link from 'next/link';
import Image from 'next/image';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background-color: ${theme.colors.background.alt};
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const ContentGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 3rem;
  align-items: center;
  
  ${theme.media.lg} {
    grid-template-columns: 1fr 1fr;
  }
`;

const ContentContainer = styled.div`
  order: 2;
  
  ${theme.media.lg} {
    order: 1;
  }
`;

const ImageContainer = styled(motion.div)`
  position: relative;
  height: 400px;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  order: 1;
  
  ${theme.media.md} {
    height: 500px;
  }
  
  ${theme.media.lg} {
    order: 2;
  }
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1.5rem;
  position: relative;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 60px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
`;

const Paragraph = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.dark};
  line-height: 1.8;
  margin-bottom: 1.5rem;
`;

const ReadMoreButton = styled(motion.a)`
  display: inline-block;
  padding: 0.75rem 1.5rem;
  background-color: transparent;
  border: 2px solid ${theme.colors.primary.red};
  color: ${theme.colors.primary.red};
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  font-size: ${theme.typography.fontSize.base};
  border-radius: 4px;
  margin-top: 1rem;
  transition: all 0.3s ease;
  
  &:hover {
    background-color: ${theme.colors.primary.red};
    color: ${theme.colors.text.light};
  }
`;

const StoryPreview = () => {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  return (
    <SectionContainer ref={ref}>
      <ContentGrid>
        <ContentContainer>
          <SectionTitle
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6 }}
          >
            Yarım Asırlık Lezzet Yolculuğu
          </SectionTitle>
          
          <Paragraph
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.2 }}
          >
            1965 yılında, henüz 15 yaşındayken Adananın en meşhur kebapçılarından birinde çırak olarak başladığım bu yolculuk, benim için sadece bir meslek değil, bir tutku haline geldi. Ustamın "Sırrımız taze malzeme ve sabırda" dediği günleri hiç unutmadım.
          </Paragraph>
          
          <Paragraph
            initial={{ opacity: 0, y: 20 }}
            animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.3 }}
          >
            Bugün, oğlum ve kızımla birlikte bu geleneği sürdürüyor, her gün aynı heyecanla mutfağa giriyorum. Amacımız sadece karın doyurmak değil, unutulmaz bir lezzet deneyimi yaşatmak.
          </Paragraph>
          
          <Link href="/about" passHref>
            <ReadMoreButton
              initial={{ opacity: 0, y: 20 }}
              animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
              transition={{ duration: 0.6, delay: 0.4 }}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              Hikayemizi Keşfedin
            </ReadMoreButton>
          </Link>
        </ContentContainer>
        
        <ImageContainer
          initial={{ opacity: 0, x: 50 }}
          animate={inView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}
          transition={{ duration: 0.8 }}
        >
          <Image
            src="/images/restaurant-history.jpg"
            alt="Kebapçı Kadir'in Hikayesi"
            fill
            style={{objectFit: "cover"}}
          />
        </ImageContainer>
      </ContentGrid>
    </SectionContainer>
  );
};

export default StoryPreview;
=== ./src/app/components/home/Testimonials.js ===
"use client"

import React, { useState, useEffect } from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { theme } from '../../styles/theme';
import { FiChevronLeft, FiChevronRight, FiStar, FiMapPin, FiCalendar } from 'react-icons/fi';
import Image from 'next/image';

const SectionContainer = styled.section`
  padding: 5rem 1rem;
  background: linear-gradient(180deg, 
    ${theme.colors.background.main} 0%, 
    ${theme.colors.secondary.offwhite} 50%,
    ${theme.colors.background.main} 100%
  );
  position: relative;
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const BackgroundPattern = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23C82C1B' fill-opacity='0.02'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  opacity: 0.5;
  z-index: 0;
`;

const SectionHeader = styled.div`
  text-align: center;
  margin-bottom: 4rem;
  position: relative;
  z-index: 1;
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
  position: relative;
  display: inline-block;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
`;

const SectionSubtitle = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.muted};
  max-width: 700px;
  margin: 2rem auto 0;
  line-height: 1.8;
`;

const SliderContainer = styled(motion.div)`
  position: relative;
  max-width: 1000px;
  margin: 0 auto;
  z-index: 1;
`;

const TestimonialSlider = styled.div`
  overflow: hidden;
  padding: 1rem 0;
`;

const TestimonialTrack = styled(motion.div)`
  display: flex;
  transition: transform 0.5s ease;
`;

const TestimonialSlide = styled.div`
  min-width: 100%;
  padding: 0 1rem;
`;

const TestimonialCard = styled.div`
  background-color: ${theme.colors.background.main};
  border-radius: 16px;
  padding: 2rem;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
  height: 100%;
  position: relative;
  overflow: hidden;
  
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 100%;
    background: linear-gradient(180deg, 
      ${theme.colors.primary.red}, 
      ${theme.colors.primary.orange}
    );
  }
`;

const TestimonialContent = styled.div`
  display: flex;
  flex-direction: column;
  height: 100%;
`;

const QuoteMarkContainer = styled.div`
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 4rem;
  color: ${theme.colors.primary.red};
  opacity: 0.1;
  font-family: ${theme.typography.fontFamily.accent};
`;

const TestimonialQuote = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.dark};
  line-height: 1.8;
  margin-bottom: 2rem;
  font-style: italic;
  flex-grow: 1;
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize.xl};
  }
`;

const TestimonialStars = styled.div`
  display: flex;
  gap: 0.25rem;
  color: ${theme.colors.primary.yellow};
  margin-bottom: 1.5rem;
  font-size: 1.5rem;
`;

const TestimonialFooter = styled.div`
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 1rem;
  align-items: center;
  margin-top: auto;
`;

const TestimonialImageContainer = styled.div`
  width: 70px;
  height: 70px;
  border-radius: 50%;
  overflow: hidden;
  position: relative;
  border: 3px solid ${theme.colors.primary.orange};
  box-shadow: 0 0 0 3px ${theme.colors.secondary.beige};
`;

const TestimonialAuthor = styled.div``;

const TestimonialName = styled.h4`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.dark};
  margin-bottom: 0.25rem;
`;

const TestimonialInfo = styled.div`
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
`;

const TestimonialRole = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.muted};
  display: flex;
  align-items: center;
  gap: 0.5rem;
`;

const TestimonialDate = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.sm};
  color: ${theme.colors.primary.orange};
  display: flex;
  align-items: center;
  gap: 0.5rem;
`;

const SliderButton = styled.button`
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: ${theme.colors.background.main};
  border: 2px solid ${theme.colors.secondary.beige};
  color: ${theme.colors.text.dark};
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  cursor: pointer;
  z-index: 2;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  
  &:hover {
    background-color: ${theme.colors.primary.red};
    color: ${theme.colors.text.light};
    border-color: ${theme.colors.primary.red};
    transform: translateY(-50%) scale(1.1);
  }
  
  ${({ direction }) => direction === 'left' && `
    left: -25px;
    
    ${theme.media.md} {
      left: -60px;
    }
  `}
  
  ${({ direction }) => direction === 'right' && `
    right: -25px;
    
    ${theme.media.md} {
      right: -60px;
    }
  `}
`;

const SliderDots = styled.div`
  display: flex;
  justify-content: center;
  margin-top: 2.5rem;
  gap: 0.75rem;
  position: relative;
  z-index: 1;
`;

const SliderDot = styled.button`
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: ${props => props.active ? theme.colors.primary.red : theme.colors.secondary.beige};
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  
  &:hover {
    background-color: ${props => props.active ? theme.colors.primary.red : theme.colors.primary.orange};
    transform: scale(1.2);
  }
  
  ${props => props.active && `
    &:after {
      content: '';
      position: absolute;
      top: -4px;
      left: -4px;
      right: -4px;
      bottom: -4px;
      border: 2px solid ${theme.colors.primary.red};
      border-radius: 50%;
      animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
      0% { opacity: 0.7; transform: scale(1); }
      50% { opacity: 0.3; transform: scale(1.2); }
      100% { opacity: 0.7; transform: scale(1); }
    }
  `}
`;

// Güncellenmiş müşteri yorumları - Isparta kebabı ve yerel kültürü yansıtan
const testimonials = [
  {
    id: 1,
    quote: "1851'den beri süren bu gelenek, sadece Isparta'da yaşanabilecek bir deneyim. Fırın kebabının o eşsiz lezzeti, üzüm şırasıyla perfect uyum... Büyüklerimin anlattığı tadın aynısını buldum burada.",
    author: "Prof. Dr. Mehmet Yılmaz",
    role: "Isparta Doğumlu",
    location: "Isparta",
    avatar: "/images/testimonial-1.jpg",
    stars: 5,
    date: "Aralık 2023"
  },
  {
    id: 2,
    quote: "Isparta'ya iş için geldim ama Kebapçı Kadir'i keşfettiğimde şehri tekrar ziyaret etmek için bahane aramaya başladım. O çalı kökü kokusu, közde pişen etlerin sesi... Unutulmaz bir deneyim.",
    author: "Ayşe Demir",
    role: "İstanbul Sakini",
    location: "İstanbul → Isparta",
    avatar: "/images/testimonial-2.jpg",
    stars: 5,
    date: "Ocak 2024"
  },
  {
    id: 3,
    quote: "Hafız Dede'nin döneminden kalma o otantik tarif, Hüseyin Usta'nın ellerinde yeniden hayat buluyor. Gül şehrinin bu saklı cevheri, gerçek bir lezzet hazinesi.",
    author: "Osman Kaya",
    role: "Gıda Kritik",
    location: "Antalya",
    avatar: "/images/testimonial-3.jpg",
    stars: 5,
    date: "Kasım 2023"
  },
  {
    id: 4,
    quote: "Kabune pilavının o efsanevi hikayesi kadar lezzetli! 'GIBUNE'dan 'KABUNE'ya uzanan bu miras, her lokmada hissediliyor. Aile olarak düzenli ziyaret ettiğimiz tek restoran.",
    author: "Fatma Özkan",
    role: "Yerel Aile",
    location: "Isparta",
    avatar: "/images/testimonial-4.jpg",
    stars: 5,
    date: "Şubat 2024"
  }
];

const Testimonials = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });
  
  const nextSlide = () => {
    setCurrentSlide((prev) => (prev === testimonials.length - 1 ? 0 : prev + 1));
  };
  
  const prevSlide = () => {
    setCurrentSlide((prev) => (prev === 0 ? testimonials.length - 1 : prev - 1));
  };
  
  // Otomatik kaydırma
  useEffect(() => {
    const interval = setInterval(() => {
      nextSlide();
    }, 6000);
    
    return () => clearInterval(interval);
  }, []);
  
  return (
    <SectionContainer ref={ref}>
      <BackgroundPattern />
      
      <SectionHeader>
        <SectionTitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
        >
          Misafirlerimizden
        </SectionTitle>
        <SectionSubtitle
          initial={{ opacity: 0, y: 20 }}
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          172 yıldır aynı lezzetle ağırladığımız değerli misafirlerimizin 
          deneyimleri ve anıları.
        </SectionSubtitle>
      </SectionHeader>
      
      <SliderContainer
        initial={{ opacity: 0 }}
        animate={inView ? { opacity: 1 } : { opacity: 0 }}
        transition={{ duration: 0.8 }}
      >
        <SliderButton 
          direction="left" 
          onClick={prevSlide}
          aria-label="Önceki yorum"
        >
          <FiChevronLeft />
        </SliderButton>
        
        <TestimonialSlider>
          <TestimonialTrack style={{ transform: `translateX(-${currentSlide * 100}%)` }}>
            {testimonials.map((testimonial) => (
              <TestimonialSlide key={testimonial.id}>
                <TestimonialCard>
                  <QuoteMarkContainer>&ldquo;</QuoteMarkContainer>
                  <TestimonialContent>
                    <TestimonialStars>
                      {[...Array(testimonial.stars)].map((_, i) => (
                        <FiStar key={i} />
                      ))}
                    </TestimonialStars>
                    <TestimonialQuote>
                      {testimonial.quote}
                    </TestimonialQuote>
                    <TestimonialFooter>
                      <TestimonialImageContainer>
                        <Image
                          src={testimonial.avatar}
                          alt={testimonial.author}
                          fill
                          style={{objectFit: "cover"}}
                        />
                      </TestimonialImageContainer>
                      <TestimonialAuthor>
                        <TestimonialName>{testimonial.author}</TestimonialName>
                        <TestimonialInfo>
                          <TestimonialRole>
                            <FiMapPin size={14} />
                            {testimonial.role} • {testimonial.location}
                          </TestimonialRole>
                          <TestimonialDate>
                            <FiCalendar size={14} />
                            {testimonial.date}
                          </TestimonialDate>
                        </TestimonialInfo>
                      </TestimonialAuthor>
                    </TestimonialFooter>
                  </TestimonialContent>
                </TestimonialCard>
              </TestimonialSlide>
            ))}
          </TestimonialTrack>
        </TestimonialSlider>
        
        <SliderButton 
          direction="right" 
          onClick={nextSlide}
          aria-label="Sonraki yorum"
        >
          <FiChevronRight />
        </SliderButton>
        
        <SliderDots>
          {testimonials.map((_, index) => (
            <SliderDot
              key={index}
              active={currentSlide === index}
              onClick={() => setCurrentSlide(index)}
              aria-label={`${index + 1}. yoruma git`}
            />
          ))}
        </SliderDots>
      </SliderContainer>
    </SectionContainer>
  );
};

export default Testimonials;
=== ./src/app/components/layout/Footer.js ===
"use client"

import React from 'react';
import Link from 'next/link';
import styled from 'styled-components';
import { theme } from '../../styles/theme';
import { FiPhone, FiMail, FiMapPin, FiClock, FiFacebook, FiInstagram, FiTwitter } from 'react-icons/fi';

const FooterContainer = styled.footer`
  background-color: ${theme.colors.secondary.anthracite};
  color: ${theme.colors.text.light};
  padding: 4rem 1rem 2rem;
  
  ${theme.media.md} {
    padding: 4rem 2rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 4rem 4rem 2rem;
  }
`;

const FooterContent = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 3rem;
  
  ${theme.media.md} {
    grid-template-columns: repeat(2, 1fr);
  }
  
  ${theme.media.lg} {
    grid-template-columns: 2fr 1fr 1fr 1fr;
  }
`;

const FooterColumn = styled.div``;

const FooterLogo = styled.div`
  font-family: ${theme.typography.fontFamily.accent};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['2xl']};
  margin-bottom: 1rem;
  
  span {
    color: ${theme.colors.primary.orange};
  }
`;

const FooterDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  line-height: 1.6;
  margin-bottom: 1.5rem;
  opacity: 0.8;
`;

const FooterTitle = styled.h4`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize.lg};
  margin-bottom: 1.5rem;
  position: relative;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 0;
    width: 40px;
    height: 2px;
    background-color: ${theme.colors.primary.red};
  }
`;

const FooterContactItem = styled.div`
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
`;

const FooterContactIcon = styled.div`
  flex-shrink: 0;
  color: ${theme.colors.primary.orange};
`;

const FooterContactText = styled.p`
  font-size: ${theme.typography.fontSize.base};
  opacity: 0.8;
`;

const FooterNav = styled.nav`
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
`;

const FooterNavLink = styled.a`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.light};
  opacity: 0.8;
  transition: all 0.3s ease;
  
  &:hover {
    opacity: 1;
    color: ${theme.colors.primary.orange};
    padding-left: 5px;
  }
`;

const SocialLinks = styled.div`
  display: flex;
  gap: 1rem;
  margin-top: 1.5rem;
`;

const SocialLink = styled.a`
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.1);
  color: ${theme.colors.text.light};
  font-size: 1.25rem;
  transition: all 0.3s ease;
  
  &:hover {
    background-color: ${theme.colors.primary.red};
    transform: translateY(-3px);
  }
`;

const Divider = styled.hr`
  border: none;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  margin: 2rem 0;
`;

const FooterBottom = styled.div`
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  font-size: ${theme.typography.fontSize.sm};
  opacity: 0.7;
  
  ${theme.media.md} {
    flex-direction: row;
  }
`;

const Copyright = styled.p``;

const FooterBottomLinks = styled.div`
  display: flex;
  gap: 1.5rem;
`;

const FooterBottomLink = styled.a`
  transition: color 0.3s ease;
  
  &:hover {
    color: ${theme.colors.primary.orange};
  }
`;

const Footer = () => {
  return (
    <FooterContainer>
      <FooterContent>
        <FooterColumn>
          <FooterLogo>
            Kebapçı <span>Kadir</span>
          </FooterLogo>
          <FooterDescription>
            1851'den beri İsparta'da geleneksel kebap kültürünü modern anlayışla sunan, yılların tecrübesiyle harmanlanmış eşsiz lezzetler.
          </FooterDescription>
          <SocialLinks>
            <SocialLink href="https://facebook.com" target="_blank" rel="noopener noreferrer">
              <FiFacebook />
            </SocialLink>
            <SocialLink href="https://instagram.com" target="_blank" rel="noopener noreferrer">
              <FiInstagram />
            </SocialLink>
            <SocialLink href="https://twitter.com" target="_blank" rel="noopener noreferrer">
              <FiTwitter />
            </SocialLink>
          </SocialLinks>
        </FooterColumn>
        
        <FooterColumn>
          <FooterTitle>İletişim</FooterTitle>
          <FooterContactItem>
            <FooterContactIcon>
              <FiPhone />
            </FooterContactIcon>
            <FooterContactText>
              +90 246 218 24 60<br />
              +90 246 212 17 71
            </FooterContactText>
          </FooterContactItem>
          <FooterContactItem>
            <FooterContactIcon>
              <FiMail />
            </FooterContactIcon>
            <FooterContactText>
              info@kebapcikadir.com.tr
            </FooterContactText>
          </FooterContactItem>
          <FooterContactItem>
            <FooterContactIcon>
              <FiMapPin />
            </FooterContactIcon>
            <FooterContactText>
              Ulucami Yanı Valilik Arkası<br />
              Kebapçılar Arastası No: 8<br />
              ISPARTA / TÜRKİYE
            </FooterContactText>
          </FooterContactItem>
          <FooterContactItem>
            <FooterContactIcon>
              <FiClock />
            </FooterContactIcon>
            <FooterContactText>
              Pazartesi - Pazar: 11:00 - 23:00<br />
              (Mutfak kapanış: 22:30)
            </FooterContactText>
          </FooterContactItem>
        </FooterColumn>
        
        <FooterColumn>
          <FooterTitle>Hızlı Bağlantılar</FooterTitle>
          <FooterNav>
            <Link href="/" passHref>
              <FooterNavLink>Ana Sayfa</FooterNavLink>
            </Link>
            <Link href="/about" passHref>
              <FooterNavLink>Hikayemiz</FooterNavLink>
            </Link>
            <Link href="/menu" passHref>
              <FooterNavLink>Menü</FooterNavLink>
            </Link>
            <Link href="/gallery" passHref>
              <FooterNavLink>Galeri</FooterNavLink>
            </Link>
            <Link href="/contact" passHref>
              <FooterNavLink>İletişim & Rezervasyon</FooterNavLink>
            </Link>
          </FooterNav>
        </FooterColumn>
        
        <FooterColumn>
          <FooterTitle>Çalışma Saatleri</FooterTitle>
          <FooterContactText>
            <strong>Pazartesi - Pazar:</strong><br />
            11:00 - 23:00
          </FooterContactText>
          <FooterContactText style={{ marginTop: '1rem' }}>
            <strong>Mutfak Kapanış:</strong><br />
            22:30
          </FooterContactText>
          <FooterContactText style={{ marginTop: '1rem' }}>
            <strong>Web:</strong><br />
            www.kebapcikadir.com.tr
          </FooterContactText>
        </FooterColumn>
      </FooterContent>
      
      <Divider />
      
      <FooterBottom>
        <Copyright>
          &copy; {new Date().getFullYear()} Kebapçı Kadir. Tüm Hakları Saklıdır.
        </Copyright>
        
        <FooterBottomLinks>
          <Link href="/privacy" passHref>
            <FooterBottomLink>Gizlilik Politikası</FooterBottomLink>
          </Link>
          <Link href="/terms" passHref>
            <FooterBottomLink>Kullanım Koşulları</FooterBottomLink>
          </Link>
        </FooterBottomLinks>
      </FooterBottom>
    </FooterContainer>
  );
};

export default Footer;
=== ./src/app/components/layout/Header.js ===
"use client"

import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { motion } from 'framer-motion';
import styled from 'styled-components';
import { theme } from '../../styles/theme';
import { FiMenu, FiX } from 'react-icons/fi';

const HeaderContainer = styled.header`
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 100;
  background: ${props => props.scrolled ? 'rgba(255, 255, 255, 0.95)' : 'transparent'};
  box-shadow: ${props => props.scrolled ? '0 2px 10px rgba(0, 0, 0, 0.1)' : 'none'};
  transition: all 0.3s ease;
  padding: ${props => props.scrolled ? '1rem 2rem' : '1.5rem 2rem'};
  
  ${theme.media.lg} {
    padding: ${props => props.scrolled ? '1rem 4rem' : '1.5rem 4rem'};
  }
`;

const NavContainer = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
`;

const Logo = styled.div`
  font-family: ${theme.typography.fontFamily.accent};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['2xl']};
  color: ${props => props.scrolled ? theme.colors.primary.red : theme.colors.text.light};
  transition: color 0.3s ease;
  
  span {
    color: ${theme.colors.primary.orange};
  }
`;

const NavLinksDesktop = styled.nav`
  display: none;
  
  ${theme.media.lg} {
    display: flex;
    gap: 2rem;
  }
`;

const NavLink = styled.a`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  color: ${props => props.scrolled ? theme.colors.text.dark : theme.colors.text.light};
  transition: all 0.3s ease;
  position: relative;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background-color: ${theme.colors.primary.orange};
    transition: width 0.3s ease;
  }
  
  &:hover {
    color: ${theme.colors.primary.orange};
    
    &:after {
      width: 100%;
    }
  }
`;

const MobileMenuButton = styled.button`
  display: block;
  background: transparent;
  border: none;
  color: ${props => props.scrolled ? theme.colors.text.dark : theme.colors.text.light};
  font-size: 1.5rem;
  cursor: pointer;
  
  ${theme.media.lg} {
    display: none;
  }
`;

const MobileMenu = styled(motion.div)`
  position: fixed;
  top: 0;
  right: 0;
  width: 100%;
  height: 100vh;
  background: ${theme.colors.background.dark};
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 2rem;
  z-index: 101;
`;

const MobileMenuCloseButton = styled.button`
  position: absolute;
  top: 2rem;
  right: 2rem;
  background: transparent;
  border: none;
  color: ${theme.colors.text.light};
  font-size: 1.5rem;
  cursor: pointer;
`;

const MobileNavLink = styled.a`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize['2xl']};
  color: ${theme.colors.text.light};
  transition: color 0.3s ease;
  
  &:hover {
    color: ${theme.colors.primary.orange};
  }
`;

const Header = () => {
  const [scrolled, setScrolled] = useState(false);
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  
  useEffect(() => {
    const handleScroll = () => {
      if (window.scrollY > 50) {
        setScrolled(true);
      } else {
        setScrolled(false);
      }
    };
    
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);
  
  const toggleMobileMenu = () => {
    setMobileMenuOpen(!mobileMenuOpen);
  };
  
  return (
    <HeaderContainer scrolled={scrolled}>
      <NavContainer>
        <Link href="/" passHref>
          <Logo scrolled={scrolled}>Kebapçı <span>Kadir</span></Logo>
        </Link>
        
        <NavLinksDesktop>
          <Link href="/" passHref>
            <NavLink scrolled={scrolled}>Ana Sayfa</NavLink>
          </Link>
          <Link href="/about" passHref>
            <NavLink scrolled={scrolled}>Hikayemiz</NavLink>
          </Link>
          <Link href="/menu" passHref>
            <NavLink scrolled={scrolled}>Menü</NavLink>
          </Link>
          <Link href="/gallery" passHref>
            <NavLink scrolled={scrolled}>Galeri</NavLink>
          </Link>
          <Link href="/contact" passHref>
            <NavLink scrolled={scrolled}>İletişim & Rezervasyon</NavLink>
          </Link>
        </NavLinksDesktop>
        
        <MobileMenuButton scrolled={scrolled} onClick={toggleMobileMenu}>
          <FiMenu />
        </MobileMenuButton>
      </NavContainer>
      
      {mobileMenuOpen && (
        <MobileMenu
          initial={{ x: '100%' }}
          animate={{ x: 0 }}
          exit={{ x: '100%' }}
          transition={{ type: 'tween', duration: 0.3 }}
        >
          <MobileMenuCloseButton onClick={toggleMobileMenu}>
            <FiX />
          </MobileMenuCloseButton>
          
          <Link href="/" passHref>
            <MobileNavLink onClick={toggleMobileMenu}>Ana Sayfa</MobileNavLink>
          </Link>
          <Link href="/about" passHref>
            <MobileNavLink onClick={toggleMobileMenu}>Hikayemiz</MobileNavLink>
          </Link>
          <Link href="/menu" passHref>
            <MobileNavLink onClick={toggleMobileMenu}>Menü</MobileNavLink>
          </Link>
          <Link href="/gallery" passHref>
            <MobileNavLink onClick={toggleMobileMenu}>Galeri</MobileNavLink>
          </Link>
          <Link href="/contact" passHref>
            <MobileNavLink onClick={toggleMobileMenu}>İletişim & Rezervasyon</MobileNavLink>
          </Link>
        </MobileMenu>
      )}
    </HeaderContainer>
  );
};

export default Header;
=== ./src/app/components/menu/MenuPage.js ===
"use client"

import React, { useState } from 'react';
import styled from 'styled-components';
import { motion, AnimatePresence } from 'framer-motion';
import { theme } from '../../styles/theme';
import Image from 'next/image';
import { FiClock, FiThermometer, FiDroplet, FiShield, FiHeart, FiTrendingUp, FiMapPin } from 'react-icons/fi';
import { FaLeaf } from "react-icons/fa6";


const PageContainer = styled.div`
  padding-top: 80px;
`;

const HeroSection = styled.section`
  height: 50vh;
  background-image: url('/images/menu-hero.jpg');
  background-size: cover;
  background-position: center;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  
  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
  }
`;

const HeroContent = styled.div`
  text-align: center;
  z-index: 1;
  color: ${theme.colors.text.light};
`;

const PageTitle = styled.h1`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['4xl']};
  margin-bottom: 1rem;
`;

const PageDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  max-width: 600px;
  margin: 0 auto;
`;

// Malzeme Kalitesi Bölümü
const IngredientsQualitySection = styled.section`
  padding: 5rem 1rem;
  background: linear-gradient(135deg, 
    ${theme.colors.background.main} 0%, 
    ${theme.colors.secondary.offwhite} 50%,
    ${theme.colors.background.main} 100%
  );
  position: relative;
  overflow: hidden;
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const BackgroundPattern = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(circle at 25% 25%, rgba(200, 44, 27, 0.05) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, rgba(216, 91, 10, 0.05) 0%, transparent 50%);
  z-index: 0;
`;

const SectionHeader = styled.div`
  text-align: center;
  margin-bottom: 5rem;
  position: relative;
  z-index: 1;
`;

const SectionTitle = styled(motion.h2)`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
  position: relative;
  display: inline-block;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background-color: ${theme.colors.primary.red};
  }
  
  ${theme.media.md} {
    font-size: ${theme.typography.fontSize['4xl']};
  }
`;

const SectionSubtitle = styled(motion.p)`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.muted};
  max-width: 800px;
  margin: 2rem auto 0;
  line-height: 1.8;
`;

// Malzeme Kartları - Yeniden Tasarlanmış
const IngredientsGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 3rem;
  margin-top: 4rem;
  
  ${theme.media.md} {
    grid-template-columns: 1fr;
  }
  
  ${theme.media.lg} {
    grid-template-columns: 1fr;
  }
`;

const IngredientCard = styled(motion.div)`
  background: linear-gradient(135deg, 
    ${theme.colors.background.main} 0%, 
    rgba(200, 44, 27, 0.02) 100%
  );
  border-radius: 20px;
  padding: 3rem;
  text-align: left;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
  transition: all 0.4s ease;
  position: relative;
  overflow: hidden;
  min-height: 400px;
  
  &:hover {
    transform: translateY(-10px);
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
  }
  
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 6px;
    background: linear-gradient(90deg, 
      ${theme.colors.primary.red}, 
      ${theme.colors.primary.orange},
      ${theme.colors.primary.yellow}
    );
  }
  
  &:after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 200px;
    height: 200px;
    background: radial-gradient(circle, 
      rgba(200, 44, 27, 0.05) 0%, 
      transparent 70%
    );
    opacity: 0.5;
  }
`;

const IngredientHeader = styled.div`
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 2rem;
  align-items: center;
  margin-bottom: 2rem;
`;

const IngredientIconContainer = styled.div`
  width: 100px;
  height: 100px;
  border-radius: 20px;
  background: linear-gradient(135deg, 
    ${theme.colors.secondary.offwhite} 0%, 
    ${theme.colors.background.main} 100%
  );
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 3rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  border: 2px solid ${theme.colors.background.main};
`;

const IngredientTitleSection = styled.div``;

const IngredientTitle = styled.h3`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['2xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 0.5rem;
`;

const IngredientSubtitle = styled.p`
  font-family: ${theme.typography.fontFamily.accent};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.primary.orange};
  font-style: italic;
`;

const IngredientDescription = styled.div`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.dark};
  line-height: 1.8;
  margin-bottom: 2rem;
  
  p {
    margin-bottom: 1rem;
  }
`;

const IngredientDetails = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-bottom: 2rem;
`;

const IngredientDetailCard = styled.div`
  background-color: ${theme.colors.background.main};
  padding: 1.5rem;
  border-radius: 12px;
  border: 1px solid ${theme.colors.secondary.beige};
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
  
  &:hover {
    border-color: ${theme.colors.primary.orange};
    transform: translateY(-3px);
  }
`;

const DetailTitle = styled.h4`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.dark};
  margin-bottom: 0.5rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  
  svg {
    color: ${theme.colors.primary.red};
  }
`;

const DetailText = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.sm};
  color: ${theme.colors.text.muted};
  line-height: 1.5;
`;

const IngredientHighlight = styled.div`
  background: linear-gradient(135deg, 
    ${theme.colors.primary.yellow}20 0%, 
    ${theme.colors.primary.orange}20 100%
  );
  padding: 1.5rem;
  border-radius: 12px;
  border-left: 4px solid ${theme.colors.primary.orange};
  position: relative;
  
  &:before {
    content: '"';
    position: absolute;
    top: -10px;
    left: 20px;
    font-size: 3rem;
    color: ${theme.colors.primary.orange};
    font-family: ${theme.typography.fontFamily.accent};
  }
`;

const HighlightText = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.dark};
  font-style: italic;
  margin: 0;
  padding-left: 1rem;
`;

// Kalite Güvencesi - Geliştirilmiş
const QualityAssurance = styled.div`
  margin-top: 8rem;
  padding: 4rem;
  background: linear-gradient(135deg, 
    ${theme.colors.background.main} 0%, 
    ${theme.colors.secondary.offwhite} 100%
  );
  border-radius: 24px;
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: hidden;
  
  &:before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, 
      rgba(200, 44, 27, 0.03) 0%, 
      transparent 50%
    );
    animation: rotate 30s linear infinite;
  }
  
  @keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
`;

const QualityTitle = styled.h3`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['3xl']};
  color: ${theme.colors.text.dark};
  text-align: center;
  margin-bottom: 1rem;
  position: relative;
  
  &:after {
    content: '';
    position: absolute;
    bottom: -15px;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 4px;
    background: linear-gradient(90deg, 
      ${theme.colors.primary.red}, 
      ${theme.colors.primary.orange}
    );
    border-radius: 2px;
  }
`;

const QualitySubtitle = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.muted};
  text-align: center;
  margin-bottom: 3rem;
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
`;

const QualityGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  position: relative;
  
  ${theme.media.sm} {
    grid-template-columns: repeat(2, 1fr);
  }
  
  ${theme.media.lg} {
    grid-template-columns: repeat(4, 1fr);
  }
`;

const QualityItem = styled.div`
  text-align: center;
  padding: 2rem;
  border-radius: 16px;
  background-color: ${theme.colors.background.main};
  transition: all 0.4s ease;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  position: relative;
  overflow: hidden;
  
  &:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
    
    &:before {
      opacity: 1;
    }
  }
  
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(90deg, 
      ${theme.colors.primary.red}, 
      ${theme.colors.primary.orange}
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }
`;

const QualityIcon = styled.div`
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background: linear-gradient(135deg, 
    ${theme.colors.primary.red}20 0%, 
    ${theme.colors.primary.orange}20 100%
  );
  font-size: 2rem;
  color: ${theme.colors.primary.red};
  margin: 0 auto 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  
  ${QualityItem}:hover & {
    transform: scale(1.1);
    background: linear-gradient(135deg, 
      ${theme.colors.primary.red}30 0%, 
      ${theme.colors.primary.orange}30 100%
    );
  }
`;

const QualityText = styled.div`
  h4 {
    font-family: ${theme.typography.fontFamily.heading};
    font-weight: ${theme.typography.fontWeight.semibold};
    font-size: ${theme.typography.fontSize.lg};
    color: ${theme.colors.text.dark};
    margin-bottom: 0.5rem;
  }
  
  p {
    font-family: ${theme.typography.fontFamily.body};
    font-size: ${theme.typography.fontSize.base};
    color: ${theme.colors.text.muted};
    line-height: 1.6;
  }
`;

// Menü Bölümü
const MenuSection = styled.section`
  padding: 5rem 1rem;
  background-color: ${theme.colors.background.alt};
  
  ${theme.media.md} {
    padding: 5rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 5rem 4rem;
  }
`;

const CategoryTabs = styled.div`
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 0.5rem;
  margin-bottom: 3rem;
  
  ${theme.media.md} {
    gap: 1rem;
  }
`;

const CategoryTab = styled.button`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.medium};
  font-size: ${theme.typography.fontSize.base};
  padding: 0.75rem 1.5rem;
  border: 2px solid ${props => props.active ? theme.colors.primary.red : theme.colors.secondary.beige};
  background-color: ${props => props.active ? theme.colors.primary.red : 'transparent'};
  color: ${props => props.active ? theme.colors.text.light : theme.colors.text.dark};
  border-radius: 30px;
  cursor: pointer;
  transition: all 0.3s ease;
  
  &:hover {
    background-color: ${props => props.active ? theme.colors.primary.red : theme.colors.secondary.beige};
  }
`;

const MenuGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  
  ${theme.media.md} {
    grid-template-columns: repeat(2, 1fr);
  }
  
  ${theme.media.lg} {
    grid-template-columns: repeat(3, 1fr);
  }
`;

const MenuItem = styled(motion.div)`
  background-color: ${theme.colors.background.main};
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
`;

const MenuItemImageContainer = styled.div`
  position: relative;
  width: 100%;
  height: 200px;
  overflow: hidden;
`;

const MenuItemContent = styled.div`
  padding: 1.5rem;
`;

const MenuItemTitle = styled.h3`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.semibold};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.dark};
  margin-bottom: 0.75rem;
`;

const MenuItemDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.muted};
  line-height: 1.6;
`;

// 4 Özel Yemek Hikayeleri Bölümü
const SpecialDishesSection = styled.section`
  padding: 5rem 1rem;
  background-color: ${theme.colors.background.main};
  
  ${theme.media.md} {
    padding: 6rem 2rem;
  }
  
  ${theme.media.lg} {
    padding: 8rem 4rem;
  }
`;

const DishStoryCard = styled(motion.div)`
  background-color: ${theme.colors.background.alt};
  border-radius: 16px;
  padding: 2rem;
  margin-bottom: 4rem;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
  position: relative;
  overflow: hidden;
  
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(90deg, 
      ${theme.colors.primary.red}, 
      ${theme.colors.primary.orange}
    );
  }
`;

const DishStoryGrid = styled.div`
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  align-items: center;
  
  ${theme.media.lg} {
    grid-template-columns: 1fr 1fr;
  }
`;

const DishStoryImageContainer = styled.div`
  position: relative;
  height: 300px;
  border-radius: 12px;
  overflow: hidden;
  
  ${theme.media.lg} {
    height: 400px;
  }
`;

const DishStoryContent = styled.div``;

const DishStoryTitle = styled.h3`
  font-family: ${theme.typography.fontFamily.heading};
  font-weight: ${theme.typography.fontWeight.bold};
  font-size: ${theme.typography.fontSize['2xl']};
  color: ${theme.colors.text.dark};
  margin-bottom: 1rem;
`;

const DishStoryBadge = styled.span`
  display: inline-block;
  background-color: ${theme.colors.primary.red};
  color: ${theme.colors.text.light};
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: ${theme.typography.fontSize.sm};
  font-weight: ${theme.typography.fontWeight.medium};
  margin-bottom: 1rem;
`;

const DishStoryDescription = styled.p`
  font-family: ${theme.typography.fontFamily.body};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.text.dark};
  line-height: 1.8;
  margin-bottom: 1.5rem;
`;

const DishStoryFeatures = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-bottom: 1.5rem;
`;

const DishStoryFeatureItem = styled.div`
  display: flex;
  align-items: center;
  gap: 0.75rem;
  background-color: ${theme.colors.background.main};
  padding: 0.75rem;
  border-radius: 8px;
  font-size: ${theme.typography.fontSize.base};
  color: ${theme.colors.text.dark};
  
  svg {
    color: ${theme.colors.primary.red};
    flex-shrink: 0;
  }
`;

const DishStoryHighlight = styled.p`
  font-family: ${theme.typography.fontFamily.accent};
  font-size: ${theme.typography.fontSize.lg};
  color: ${theme.colors.primary.orange};
  font-style: italic;
  border-left: 4px solid ${theme.colors.primary.orange};
  padding-left: 1rem;
`;

export default function MenuPage() {
  const [activeCategory, setActiveCategory] = useState('all');

  const menuCategories = [
    { id: 'all', name: 'Tümü' },
    { id: 'kebabs', name: 'Kebaplar' },
    { id: 'meats', name: 'Et Yemekleri' },
    { id: 'appetizers', name: 'Mezeler' },
    { id: 'rice', name: 'Pilavlar' },
    { id: 'desserts', name: 'Tatlılar' },
    { id: 'drinks', name: 'İçecekler' }
  ];

  const menuItems = [
    {
      id: 1,
      title: 'Adana Kebap',
      description: 'Özel baharatlarla marine edilmiş kıyma, ateşte ustaca pişirilir.',
      category: 'kebabs',
      image: '/images/adana-kebap.jpg'
    },
    {
      id: 2,
      title: 'Urfa Kebap',
      description: 'Acısız, aromatik baharatlarla hazırlanan yumuşacık kebap.',
      category: 'kebabs',
      image: '/images/urfa-kebap.jpg'
    },
    {
      id: 3,
      title: 'Karışık Izgara',
      description: 'Çeşit çeşit etlerin bir araya geldiği muhteşem lezzet.',
      category: 'meats',
      image: '/images/karisik-izgara.jpg'
    }
  ];

  const specialDishes = [
    {
      id: 1,
      title: 'Isparta Fırın Kebabı',
      badge: '172 Yıllık Gelenek',
      description: 'Hayvanlar doğal ortamlarında yetiştirilip, kesim aşamasında hijyenik ortamda eti ayrıştırılır. Mezbahaneden işletmemize kendi kapalı arabamızla getirilip, böbrek yağları ve kan damarları temizlenen etlerimizi önceden yakılıp ısıtılan fırında 3 - 3.5 saat aralığında çalı kökü odunuyla 2 saat alev 1 saat korda pişirilir.',
      image: '/images/isparta-kebabi.jpg',
      features: [
        { icon: <FiThermometer />, text: 'Çalı Kökü Odunu' },
        { icon: <FiClock />, text: '3.5 Saat Pişirme' },
        { icon: <FiDroplet />, text: '%50 Fire' },
        { icon: <FiShield />, text: '100% Doğal' }
      ],
      highlight: 'Fırından çıkan nar gibi kuzu etini kendine özgü bakır tabaklarda lavaş ekmeği üzerine servise yapılır.',
      direction: 'normal'
    },
    {
      id: 2,
      title: 'Kabune Pilavı',
      badge: 'Efsaneli Lezzet',
      description: 'Dolgun pirinçten yapılan pilavımız tatlı soğanın halka halka doğranıp karabiber ve tuz ile ovularak bakır kazanların altına konur. Üzerine haşlanmış nohut ilave edilir. Nohutun üzerine önceden haşlanmış kuzu kaburgalarının etlerinin didilerek üzerine takviye olur.',
      image: '/images/kabune-pilavi.jpg',
      features: [
        { icon: <FiClock />, text: '15 Dakika Pişirme' },
        { icon: <FiThermometer />, text: 'Saç Ayağında' },
        { icon: <FiMapPin />, text: 'Üzüm Asması Çırpısı' },
        { icon: <FiHeart />, text: 'Doyurucu Yemek' }
      ],
      highlight: 'Kız Bu NE anlamına gelen GIBUNE pilavı günümüze kadar KABUNE Pilavı olarak ismi değişerek bugünlere gelmiştir.',
      direction: 'reverse'
    },
    {
      id: 3,
      title: 'İrmik Helvası',
      badge: 'Hakiki Tereyağı',
      description: 'O numara sarı irmiğin hakiki tereyağı ve kunar fıstığıyla büyük bakır kazanlarda mangal kömürü ateşinde kaynatılarak belirli bir kıvama gelinceye kadar hiç ara vermeden ahşap küreği ile karıştırılarak pişirilir.',
      image: '/images/irmik-helvasi.jpg',
      features: [
        { icon: <FiThermometer />, text: 'Mangal Kömürü' },
        { icon: <FiClock />, text: 'Sürekli Karıştırma' },
        { icon: <FiDroplet />, text: 'Hakiki Tereyağı' },
        { icon: <FaLeaf />, text: 'Antep Fıstığı' }
      ],
      highlight: 'Servisi soğuk ve sıcak olarak sunulur.',
      direction: 'normal'
    },
    {
      id: 4,
      title: 'Üzüm Şırası',
      badge: 'Sağlık Deposu',
      description: 'Yöremizin siyah Dimlit üzümlerinini kurutularak ve çöpleri ayrıştırılarak temizliği yapıldıktan sonra yarım kazan su içerisinde şişinceye kadar kaynatılır. Kaynama esnasında içerisine tülbent içerisinde mersin yaprağı karanfil ve tatlı kabuk konularak kaynatmaya devam edilir.',
      image: '/images/uzum-sirasi.jpg',
      features: [
        { icon: <FaLeaf />, text: 'Dimlit Üzümü' },
        { icon: <FiHeart />, text: 'Mersin Yaprağı' },
        { icon: <FiDroplet />, text: 'Karanfil & Tatlı Kabuk' },
        { icon: <FiTrendingUp />, text: 'Protein-Glikoz Dengesi' }
      ],
      highlight: 'Kebabın yanında tercih edilmesinin sebebi besin değeri olarak etin protein, üzüm hoşafınında glikoz ihtiva etmesinden dolayı insan vücudunda bir birini parçalar.',
      direction: 'reverse'
    }
  ];

  const filteredItems = activeCategory === 'all' 
    ? menuItems 
    : menuItems.filter(item => item.category === activeCategory);

  return (
    <PageContainer>
      <HeroSection>
        <HeroContent>
          <PageTitle>Menümüz</PageTitle>
          <PageDescription>
            1851'den beri süren gelenek, en kaliteli malzemeler ve ustalık...
          </PageDescription>
        </HeroContent>
      </HeroSection>

      {/* Malzeme Kalitesi Bölümü */}
      <IngredientsQualitySection>
        <BackgroundPattern />
        <SectionHeader>
          <SectionTitle
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            Malzemelerimizin Kalitesi
          </SectionTitle>
          <SectionSubtitle
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.2 }}
            viewport={{ once: true }}
          >
            Lezzetin temelinde kaliteli malzeme vardır. Yılların tecrübesiyle 
            en uygun tedarikçilerden aldığımız en taze malzemelerle hazırladığımız yemekler.
          </SectionSubtitle>
        </SectionHeader>

        {/* Malzeme Kalitesi İçerik Kartları */}
        <motion.div
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          transition={{ duration: 0.8, delay: 0.4 }}
          viewport={{ once: true }}
        >
          <IngredientsGrid>
            <IngredientCard
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.1 }}
              viewport={{ once: true }}
            >
              <IngredientHeader>
                <IngredientIconContainer>
                  <motion.div
                    animate={{ rotate: [0, 10, -10, 0] }}
                    transition={{ duration: 3, repeat: Infinity }}
                  >
                    🥩
                  </motion.div>
                </IngredientIconContainer>
                <IngredientTitleSection>
                  <IngredientTitle>Premium Etlerimiz</IngredientTitle>
                  <IngredientSubtitle>Doğal ve Sağlıklı Seçim</IngredientSubtitle>
                </IngredientTitleSection>
              </IngredientHeader>
              
              <IngredientDescription>
                <p>Hayvanlar doğal ortamlarında yetiştirilip, kesim aşamasında en hijyenik koşullarda eti ayrıştırılır. Mezbahaneden işletmemize kendi kapalı arabamızla getirilen etlerimiz, böbrek yağları ve kan damarları özenle temizlenir.</p>
                <p>Etlerimiz 100% doğaldır ve kolesterolü yok denecek kadar azdır. Kızarmış yağ doymuş yağdır ve vücuttaki doymamış yağları erittiği bilinmektedir.</p>
              </IngredientDescription>
              
              <IngredientDetails>
                <IngredientDetailCard>
                  <DetailTitle>
                    <FiShield /> Hijyen Standardı
                  </DetailTitle>
                  <DetailText>En strict hijyen koşullarında ayrıştırma ve temizleme işlemleri yapılır.</DetailText>
                </IngredientDetailCard>
                <IngredientDetailCard>
                  <DetailTitle>
                    <FiThermometer /> Soğuk Zincir
                  </DetailTitle>
                  <DetailText>Kendi araçlarımızla soğuk zincir korunarak taşınır.</DetailText>
                </IngredientDetailCard>
                <IngredientDetailCard>
                  <DetailTitle>
                    <FiHeart /> Sağlık Değeri
                  </DetailTitle>
                  <DetailText>Kolesterolü minimal, protein değeri maksimum.</DetailText>
                </IngredientDetailCard>
              </IngredientDetails>
              
              <IngredientHighlight>
                <HighlightText>
                  Böbrek yağları ve kan damarları özenle temizlenen etlerimiz, vücutta doymuş yağları eritme özelliğine sahiptir.
                </HighlightText>
              </IngredientHighlight>
            </IngredientCard>

            <IngredientCard
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
              viewport={{ once: true }}
            >
              <IngredientHeader>
                <IngredientIconContainer>
                  <motion.div
                    animate={{ scale: [1, 1.1, 1] }}
                    transition={{ duration: 2, repeat: Infinity }}
                  >
                    🌶️
                  </motion.div>
                </IngredientIconContainer>
                <IngredientTitleSection>
                  <IngredientTitle>Özel Baharatlarımız</IngredientTitle>
                  <IngredientSubtitle>Gizli Tarif & Harmanlama Sanatı</IngredientSubtitle>
                </IngredientTitleSection>
              </IngredientHeader>
              
              <IngredientDescription>
                <p>Özel baharatlarımız Antep ve Urfa'dan getirilen en taze karabiberler ile özenle harmanlanır. Her karışım ustalık gerektiren bir sanattır ve ailemizin gizli tarifidir.</p>
                <p>Nesillerce aktarılan özel harmanlama teknikleri ile hazırlanan baharat karışımlarımız, yemeklerimize eşsiz aroma ve lezzet katar.</p>
              </IngredientDescription>
              
              <IngredientDetails>
                <IngredientDetailCard>
                  <DetailTitle>
                    <FiMapPin /> Coğrafi Köken
                  </DetailTitle>
                  <DetailText>Antep ve Urfa'dan özel olarak getirilen premium baharatlar.</DetailText>
                </IngredientDetailCard>
                <IngredientDetailCard>
                  <DetailTitle>
                    <FaLeaf /> Taze Karabiber
                  </DetailTitle>
                  <DetailText>Her gün taze çekilmiş, aromatik karabiber.</DetailText>
                </IngredientDetailCard>
                <IngredientDetailCard>
                  <DetailTitle>
                    <FiHeart /> Gizli Formül
                  </DetailTitle>
                  <DetailText>172 yıldır korunan aile formülü ile harmanlama.</DetailText>
                </IngredientDetailCard>
              </IngredientDetails>
              
              <IngredientHighlight>
                <HighlightText>
                  Baharatlarımızın gizli tarifi, Hafız Dede'den günümüze nesilden nesile aktarılan kutsal bir mirastır.
                </HighlightText>
              </IngredientHighlight>
            </IngredientCard>

            <IngredientCard
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.3 }}
              viewport={{ once: true }}
            >
              <IngredientHeader>
                <IngredientIconContainer>
                  <motion.div
                    animate={{ rotate: [0, 5, -5, 0] }}
                    transition={{ duration: 2.5, repeat: Infinity }}
                  >
                    🌾
                  </motion.div>
                </IngredientIconContainer>
                <IngredientTitleSection>
                  <IngredientTitle>Pirinç & Tahıllar</IngredientTitle>
                  <IngredientSubtitle>Seçilmiş Kalite & Dolgunluk</IngredientSubtitle>
                </IngredientTitleSection>
              </IngredientHeader>
              
              <IngredientDescription>
                <p>Dolgun pirinçlerimiz özenle seçilir ve temizliği yapılır. O numara sarı irmiğimiz en kaliteli üreticilerden temin edilir. Her tahıl tek tek gözden geçirilir.</p>
                <p>Pirinçlerimiz ıslatılıp temizliği yapıldıktan sonra, geleneksel yöntemlerle pişirilir ve mükemmel kıvamı yakalanır.</p>
              </IngredientDescription>
              
              <IngredientDetails>
                <IngredientDetailCard>
                  <DetailTitle>
                    <FiDroplet /> Dolgun Taneli
                  </DetailTitle>
                  <DetailText>Premium kalite, dolgun taneli pirinç seçimi.</DetailText>
                </IngredientDetailCard>
                <IngredientDetailCard>
                  <DetailTitle>
                    <FaLeaf /> O Numara Irmik
                  </DetailTitle>
                  <DetailText>En kaliteli sarı irmik, özel tedarikçilerden.</DetailText>
                </IngredientDetailCard>
                <IngredientDetailCard>
                  <DetailTitle>
                    <FiShield /> Temizlik Süreci
                  </DetailTitle>
                  <DetailText>Tek tek kontrol, özenli yıkama ve temizlik.</DetailText>
                </IngredientDetailCard>
              </IngredientDetails>
              
              <IngredientHighlight>
                <HighlightText>
                  Pirinçlerimiz bire birbuçuk ölçeğinde et suyuyla pişirilir ve saç ayağında üzüm asmasının çırpısıyla mükemmel lezzeti yakalar.
                </HighlightText>
              </IngredientHighlight>
            </IngredientCard>
          </IngredientsGrid>
        </motion.div>

        {/* Kalite Güvencesi Bölümü */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.6 }}
          viewport={{ once: true }}
        >
          <QualityAssurance>
            <QualityTitle>Kalite Güvencemiz</QualityTitle>
            <QualitySubtitle>
              172 yıllık deneyimimizle, en yüksek kalite standartlarını garanti ediyoruz. 
              Her aşamada titizlikle kontrol edilen süreçlerimiz.
            </QualitySubtitle>
            <QualityGrid>
              <QualityItem>
                <QualityIcon>
                  <FiShield />
                </QualityIcon>
                <QualityText>
                  <h4>Hijyenik Koşullar</h4>
                  <p>Tüm malzemeler en strict hijyen koşullarında hazırlanır. Her aşamada sağlık kontrolleri yapılır.</p>
                </QualityText>
              </QualityItem>
              <QualityItem>
                <QualityIcon>
                  <FiClock />
                </QualityIcon>
                <QualityText>
                  <h4>Günlük Tedarik</h4>
                  <p>Malzemeler sabah erken saatlerde taze olarak temin edilir. Her gün yeni, hiçbir zaman önceki gün kalma.</p>
                </QualityText>
              </QualityItem>
              <QualityItem>
                <QualityIcon>
                  <FiThermometer />
                </QualityIcon>
                <QualityText>
                  <h4>Soğuk Zincir</h4>
                  <p>Kendi araçlarımız ile soğuk zincir korunur. Taşıma sürecinde hiçbir kalite kaybı yaşanmaz.</p>
                </QualityText>
              </QualityItem>
              <QualityItem>
                <QualityIcon>
                  <FiHeart />
                </QualityIcon>
                <QualityText>
                  <h4>Sağlıklı Seçim</h4>
                  <p>100% doğal, katkısız malzemeler. Hiçbir kimyasal koruyucu veya katkı maddesi kullanılmaz.</p>
                </QualityText>
              </QualityItem>
            </QualityGrid>
          </QualityAssurance>
        </motion.div>
      </IngredientsQualitySection>

      {/* Menü Bölümü */}
      <MenuSection>
        <SectionHeader>
          <SectionTitle
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            Menü
          </SectionTitle>
        </SectionHeader>

        <CategoryTabs>
          {menuCategories.map(category => (
            <CategoryTab
              key={category.id}
              active={activeCategory === category.id}
              onClick={() => setActiveCategory(category.id)}
            >
              {category.name}
            </CategoryTab>
          ))}
        </CategoryTabs>

        <AnimatePresence mode="wait">
          <MenuGrid
            as={motion.div}
            key={activeCategory}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 0.3 }}
          >
            {filteredItems.map(item => (
              <MenuItem
                key={item.id}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
                viewport={{ once: true }}
              >
                <MenuItemImageContainer>
                  <Image
                    src={item.image}
                    alt={item.title}
                    fill
                    style={{objectFit: "cover"}}
                  />
                </MenuItemImageContainer>
                <MenuItemContent>
                  <MenuItemTitle>{item.title}</MenuItemTitle>
                  <MenuItemDescription>{item.description}</MenuItemDescription>
                </MenuItemContent>
              </MenuItem>
            ))}
          </MenuGrid>
        </AnimatePresence>
      </MenuSection>

      {/* 4 Özel Yemek Hikayeleri */}
      <SpecialDishesSection>
        <SectionHeader>
          <SectionTitle
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            Özel Lezzetlerimiz ve Hikayeleri
          </SectionTitle>
          <SectionSubtitle
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.2 }}
            viewport={{ once: true }}
          >
            Her bir lezzetimizin arkasında yıllarca aktarılan bir hikaye, 
            bir ustalık ve bir tutku var.
          </SectionSubtitle>
        </SectionHeader>

        {specialDishes.map((dish, index) => (
          <DishStoryCard
            key={dish.id}
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: index * 0.2 }}
            viewport={{ once: true }}
          >
            <DishStoryGrid style={{ 
              gridTemplateColumns: dish.direction === 'reverse' ? '1fr 1fr' : '1fr 1fr'
            }}>
              {dish.direction === 'reverse' ? (
                <>
                  <DishStoryContent>
                    <DishStoryBadge>{dish.badge}</DishStoryBadge>
                    <DishStoryTitle>{dish.title}</DishStoryTitle>
                    <DishStoryDescription>{dish.description}</DishStoryDescription>
                    <DishStoryFeatures>
                      {dish.features.map((feature, idx) => (
                        <DishStoryFeatureItem key={idx}>
                          {feature.icon}
                          <span>{feature.text}</span>
                        </DishStoryFeatureItem>
                      ))}
                    </DishStoryFeatures>
                    <DishStoryHighlight>{dish.highlight}</DishStoryHighlight>
                  </DishStoryContent>
                  <DishStoryImageContainer>
                    <Image
                      src={dish.image}
                      alt={dish.title}
                      fill
                      style={{objectFit: "cover"}}
                    />
                  </DishStoryImageContainer>
                </>
              ) : (
                <>
                  <DishStoryImageContainer>
                    <Image
                      src={dish.image}
                      alt={dish.title}
                      fill
                      style={{objectFit: "cover"}}
                    />
                  </DishStoryImageContainer>
                  <DishStoryContent>
                    <DishStoryBadge>{dish.badge}</DishStoryBadge>
                    <DishStoryTitle>{dish.title}</DishStoryTitle>
                    <DishStoryDescription>{dish.description}</DishStoryDescription>
                    <DishStoryFeatures>
                      {dish.features.map((feature, idx) => (
                        <DishStoryFeatureItem key={idx}>
                          {feature.icon}
                          <span>{feature.text}</span>
                        </DishStoryFeatureItem>
                      ))}
                    </DishStoryFeatures>
                    <DishStoryHighlight>{dish.highlight}</DishStoryHighlight>
                  </DishStoryContent>
                </>
              )}
            </DishStoryGrid>
          </DishStoryCard>
        ))}
      </SpecialDishesSection>
    </PageContainer>
  );
}
=== ./src/app/components/ui/AnimatedSection.js ===

=== ./src/app/components/ui/Button.js ===

=== ./src/app/components/ui/Card.js ===

=== ./src/app/contact/page.js ===
import ContactPage from '../components/contact/ContactPage';

export const metadata = {
  title: 'İletişim & Rezervasyon | Kebapçı Kadir',
  description: 'Kebapçı Kadir ile iletişime geçin, masa rezervasyonu yapın. Adres, telefon ve çalışma saatlerimiz.',
}

export default function Contact() {
  return <ContactPage />;
}
=== ./src/app/gallery/page.js ===
import GalleryPage from '../components/gallery/GalleryPage';

export const metadata = {
  title: 'Galeri | Kebapçı Kadir',
  description: 'Kebapçı Kadir\'in fotoğraf galerisi. Lezzetlerimiz, mekanımız ve ekibimiz ile ilgili görsel içerikler.',
}

export default function Gallery() {
  return <GalleryPage />;
}
=== ./src/app/globals.css ===
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&family=Open+Sans:wght@400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap');

:root {
  /* Colors */
  --primary-red: #C82C1B;
  --primary-orange: #D85B0A;
  --primary-yellow: #FFBF00;
  --primary-green: #2C5E1A;
  
  --secondary-brown: #5D4037;
  --secondary-beige: #D7CCC8;
  --secondary-terracotta: #A74C1A;
  --secondary-anthracite: #263238;
  --secondary-offwhite: #F5F5F5;
  
  --accent-copper: #B87333;
  --accent-bronze: #CD7F32;
  
  --text-dark: #212121;
  --text-light: #FFFFFF;
  --text-muted: #757575;
  
  --background-main: #FFFFFF;
  --background-alt: #FAFAFA;
  --background-dark: #121212;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: var(--font-open-sans, 'Open Sans', sans-serif);
  color: var(--text-dark);
  overflow-x: hidden;
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-montserrat, 'Montserrat', sans-serif);
}

a {
  color: inherit;
  text-decoration: none;
}

img {
  max-width: 100%;
  height: auto;
}

/* Özel Scrollbar */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #f5f5f5;
}

::-webkit-scrollbar-thumb {
  background: #c82c1b;
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: #a52517;
}
=== ./src/app/layout.js ===
import './globals.css'
import { Inter, Montserrat, Open_Sans, Playfair_Display } from 'next/font/google'
import Header from './components/layout/Header'
import Footer from './components/layout/Footer'
import StyledComponentsRegistry from './registry'


const montserrat = Montserrat({ 
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
  variable: '--font-montserrat'
})

const openSans = Open_Sans({ 
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
  variable: '--font-open-sans'
})

const playfair = Playfair_Display({ 
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
  variable: '--font-playfair'
})

export const metadata = {
  title: 'Kebapçı Kadir | Ateşin ve Lezzetin Buluştuğu Yer',
  description: 'Kebapçı Kadir - Geleneksel kebap kültürünü modern bir anlayışla sunan, yılların tecrübesiyle harmanlanmış eşsiz lezzetler.',
  keywords: 'kebapçı, kebap, adana kebap, urfa kebap, türk mutfağı, restoran, mersin',
}

export default function RootLayout({ children }) {
  return (
    <html lang="tr">
      <body>
        <StyledComponentsRegistry>
          <Header />
          <main>{children}</main>
          <Footer />
        </StyledComponentsRegistry>
      </body>
    </html>
  )
}
=== ./src/app/menu/page.js ===
import MenuPage from '../components/menu/MenuPage';

export const metadata = {
  title: 'Menü | Kebapçı Kadir',
  description: 'Kebapçı Kadir\'in enfes menüsü. Birbirinden lezzetli kebaplar, mezeler, tatlılar ve içecekler.',
}

export default function Menu() {
  return <MenuPage />;
}
=== ./src/app/page.js ===
import Hero from './components/home/Hero'
import LegacyIntro from './components/home/LegacyIntro'  // Yeni ekledi
import Heritage from './components/home/Heritage'
import OvenKebabStory from './components/home/OvenKebabStory'
import FeaturedDishes from './components/home/FeaturedDishes'
import KabunePilafStory from './components/home/KabunePilafStory'
import CurrentOwnerSpeech from './components/home/CurrentOwnerSpeech'
import Testimonials from './components/home/Testimonials'
import ReservationCTA from './components/home/ReservationCTA'

export default function Home() {
  return (
    <>
      <Hero />
      <LegacyIntro />  {/* Yeni eklendi */}
      <Heritage />
      <OvenKebabStory />
      <FeaturedDishes />
      <KabunePilafStory />
      <CurrentOwnerSpeech />
      <Testimonials />
      <ReservationCTA />
    </>
  )
}
=== ./src/app/page.module.css ===
.page {
  --gray-rgb: 0, 0, 0;
  --gray-alpha-200: rgba(var(--gray-rgb), 0.08);
  --gray-alpha-100: rgba(var(--gray-rgb), 0.05);

  --button-primary-hover: #383838;
  --button-secondary-hover: #f2f2f2;

  display: grid;
  grid-template-rows: 20px 1fr 20px;
  align-items: center;
  justify-items: center;
  min-height: 100svh;
  padding: 80px;
  gap: 64px;
  font-family: var(--font-geist-sans);
}

@media (prefers-color-scheme: dark) {
  .page {
    --gray-rgb: 255, 255, 255;
    --gray-alpha-200: rgba(var(--gray-rgb), 0.145);
    --gray-alpha-100: rgba(var(--gray-rgb), 0.06);

    --button-primary-hover: #ccc;
    --button-secondary-hover: #1a1a1a;
  }
}

.main {
  display: flex;
  flex-direction: column;
  gap: 32px;
  grid-row-start: 2;
}

.main ol {
  font-family: var(--font-geist-mono);
  padding-left: 0;
  margin: 0;
  font-size: 14px;
  line-height: 24px;
  letter-spacing: -0.01em;
  list-style-position: inside;
}

.main li:not(:last-of-type) {
  margin-bottom: 8px;
}

.main code {
  font-family: inherit;
  background: var(--gray-alpha-100);
  padding: 2px 4px;
  border-radius: 4px;
  font-weight: 600;
}

.ctas {
  display: flex;
  gap: 16px;
}

.ctas a {
  appearance: none;
  border-radius: 128px;
  height: 48px;
  padding: 0 20px;
  border: none;
  border: 1px solid transparent;
  transition:
    background 0.2s,
    color 0.2s,
    border-color 0.2s;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
  line-height: 20px;
  font-weight: 500;
}

a.primary {
  background: var(--foreground);
  color: var(--background);
  gap: 8px;
}

a.secondary {
  border-color: var(--gray-alpha-200);
  min-width: 158px;
}

.footer {
  grid-row-start: 3;
  display: flex;
  gap: 24px;
}

.footer a {
  display: flex;
  align-items: center;
  gap: 8px;
}

.footer img {
  flex-shrink: 0;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  a.primary:hover {
    background: var(--button-primary-hover);
    border-color: transparent;
  }

  a.secondary:hover {
    background: var(--button-secondary-hover);
    border-color: transparent;
  }

  .footer a:hover {
    text-decoration: underline;
    text-underline-offset: 4px;
  }
}

@media (max-width: 600px) {
  .page {
    padding: 32px;
    padding-bottom: 80px;
  }

  .main {
    align-items: center;
  }

  .main ol {
    text-align: center;
  }

  .ctas {
    flex-direction: column;
  }

  .ctas a {
    font-size: 14px;
    height: 40px;
    padding: 0 16px;
  }

  a.secondary {
    min-width: auto;
  }

  .footer {
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
  }
}

@media (prefers-color-scheme: dark) {
  .logo {
    filter: invert();
  }
}

=== ./src/app/registry.js ===
// src/app/registry.js dosyasını oluşturun
'use client'

import React, { useState } from 'react'
import { useServerInsertedHTML } from 'next/navigation'
import { ServerStyleSheet, StyleSheetManager } from 'styled-components'

export default function StyledComponentsRegistry({ children }) {
  const [styledComponentsStyleSheet] = useState(() => new ServerStyleSheet())

  useServerInsertedHTML(() => {
    const styles = styledComponentsStyleSheet.getStyleElement()
    styledComponentsStyleSheet.instance.clearTag()
    return <>{styles}</>
  })

  if (typeof window !== 'undefined') return <>{children}</>

  return (
    <StyleSheetManager sheet={styledComponentsStyleSheet.instance}>
      {children}
    </StyleSheetManager>
  )
}
=== ./src/app/styles/theme.js ===
export const theme = {
    colors: {
      // Ana Renkler
      primary: {
        red: '#C82C1B',      // Köz Kırmızısı
        orange: '#D85B0A',   // Koyu Turuncu
        yellow: '#FFBF00',   // Safran Sarısı
        green: '#2C5E1A',    // Koyu Yeşil (Bitkiler/Baharatlar)
      },
      // Destekleyici Renkler
      secondary: {
        brown: '#5D4037',    // Toprak Tonu
        beige: '#D7CCC8',    // Bej
        terracotta: '#A74C1A', // Kiremit
        anthracite: '#263238', // Antrasit
        offwhite: '#F5F5F5',  // Kırık Beyaz
      },
      // Vurgu Renkler (Metalik)
      accent: {
        copper: '#B87333',   // Bakır
        bronze: '#CD7F32',   // Bronz
      },
      // Fonksiyonel Renkler
      text: {
        dark: '#212121',     // Ana metin rengi
        light: '#FFFFFF',    // Koyu arka planlarda kullanılacak metin rengi
        muted: '#757575',    // İkincil metin rengi
      },
      background: {
        main: '#FFFFFF',     // Ana arka plan
        alt: '#FAFAFA',      // Alternatif arka plan
        dark: '#121212',     // Koyu bölümler için
      }
    },
    typography: {
      fontFamily: {
        heading: 'var(--font-montserrat, "Montserrat", sans-serif)',
        body: 'var(--font-open-sans, "Open Sans", sans-serif)',
        accent: 'var(--font-playfair, "Playfair Display", serif)', // İmza, slogan gibi özel alanlarda
      },
      fontWeight: {
        regular: 400,
        medium: 500,
        semibold: 600,
        bold: 700,
      },
      fontSize: {
        xs: '0.75rem',    // 12px
        sm: '0.875rem',   // 14px
        base: '1rem',     // 16px
        lg: '1.125rem',   // 18px
        xl: '1.25rem',    // 20px
        '2xl': '1.5rem',  // 24px
        '3xl': '1.875rem', // 30px
        '4xl': '2.25rem', // 36px
        '5xl': '3rem',    // 48px
      },
    },
    breakpoints: {
      xs: '320px',
      sm: '640px',
      md: '768px',
      lg: '1024px',
      xl: '1280px',
      '2xl': '1536px',
    },
    media: {
      xs: `@media (min-width: 320px)`,
      sm: `@media (min-width: 640px)`,
      md: `@media (min-width: 768px)`,
      lg: `@media (min-width: 1024px)`,
      xl: `@media (min-width: 1280px)`,
      '2xl': `@media (min-width: 1536px)`,
    },
  };
=== ./src/app/utils/animations.js ===
export const fadeIn = {
    hidden: { opacity: 0 },
    visible: { 
      opacity: 1,
      transition: { duration: 0.6 }
    }
  };
  
  export const slideUp = {
    hidden: { y: 50, opacity: 0 },
    visible: { 
      y: 0, 
      opacity: 1,
      transition: { 
        type: "spring", 
        stiffness: 100, 
        damping: 15 
      }
    }
  };
  
  export const staggerContainer = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };
  
  // Ateş efekti animasyonu (kor/köz efekti için)
  export const fireGlow = {
    animate: {
      boxShadow: [
        '0 0 10px 0 rgba(200, 44, 27, 0.5)',
        '0 0 15px 2px rgba(216, 91, 10, 0.6)',
        '0 0 10px 0 rgba(200, 44, 27, 0.5)',
      ],
      transition: {
        duration: 2,
        repeat: Infinity,
        repeatType: "reverse"
      }
    }
  };
=== ./src/app/utils/helpers.js ===
